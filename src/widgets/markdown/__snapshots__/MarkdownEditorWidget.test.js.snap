// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MarkdownEditorWidget should match snapshot 1`] = `
<MockForm>
  <ForwardRef
    schema={
      Object {
        "properties": Object {
          "markdownWidget": Object {
            "title": "ui:widget: MarkdownEditorWidget",
            "type": "string",
          },
        },
        "title": "markdown",
        "type": "object",
      }
    }
    uiSchema={
      Object {
        "classNames": "column-span-12",
        "markdownWidget": Object {
          "classNames": "column-span-12",
          "ui:widget": "MarkdownEditorWidget",
        },
      }
    }
  >
    <Form
      disabled={false}
      forwardedRef={null}
      hideSubmit={false}
      isSubmitting={false}
      readOnly={false}
      schema={
        Object {
          "properties": Object {
            "markdownWidget": Object {
              "title": "ui:widget: MarkdownEditorWidget",
              "type": "string",
            },
          },
          "title": "markdown",
          "type": "object",
        }
      }
      uiSchema={
        Object {
          "classNames": "column-span-12",
          "markdownWidget": Object {
            "classNames": "column-span-12",
            "ui:widget": "MarkdownEditorWidget",
          },
        }
      }
    >
      <StyledForm
        ArrayFieldTemplate={[Function]}
        FieldTemplate={[Function]}
        ObjectFieldTemplate={[Function]}
        disabled={false}
        fields={
          Object {
            "AttachmentsField": [Function],
            "BulletField": [Function],
            "DescriptionField": [Function],
            "ParagraphField": [Function],
            "SchemaField": [Function],
          }
        }
        schema={
          Object {
            "properties": Object {
              "markdownWidget": Object {
                "title": "ui:widget: MarkdownEditorWidget",
                "type": "string",
              },
            },
            "title": "markdown",
            "type": "object",
          }
        }
        showErrorList={false}
        transformErrors={[Function]}
        uiSchema={
          Object {
            "classNames": "column-span-12",
            "markdownWidget": Object {
              "classNames": "column-span-12",
              "ui:widget": "MarkdownEditorWidget",
            },
          }
        }
        widgets={
          Object {
            "BaseInput": [Function],
            "CheckboxWidget": [Function],
            "CheckboxesWidget": [Function],
            "DateTimeWidget": [Function],
            "DateWidget": [Function],
            "MarkdownEditorWidget": [Function],
            "OtherRadioWidget": [Function],
            "RadioWidget": [Function],
            "SelectWidget": [Function],
            "SignatureWidget": [Function],
            "TextareaWidget": [Function],
            "TimeWidget": [Function],
          }
        }
      >
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          className="StyledForm-sc-dhnby8-0 hefeIB"
          disabled={false}
          fields={
            Object {
              "AttachmentsField": [Function],
              "BulletField": [Function],
              "DescriptionField": [Function],
              "ParagraphField": [Function],
              "SchemaField": [Function],
            }
          }
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          omitExtraData={false}
          schema={
            Object {
              "properties": Object {
                "markdownWidget": Object {
                  "title": "ui:widget: MarkdownEditorWidget",
                  "type": "string",
                },
              },
              "title": "markdown",
              "type": "object",
            }
          }
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={
            Object {
              "classNames": "column-span-12",
              "markdownWidget": Object {
                "classNames": "column-span-12",
                "ui:widget": "MarkdownEditorWidget",
              },
            }
          }
          widgets={
            Object {
              "BaseInput": [Function],
              "CheckboxWidget": [Function],
              "CheckboxesWidget": [Function],
              "DateTimeWidget": [Function],
              "DateWidget": [Function],
              "MarkdownEditorWidget": [Function],
              "OtherRadioWidget": [Function],
              "RadioWidget": [Function],
              "SelectWidget": [Function],
              "SignatureWidget": [Function],
              "TextareaWidget": [Function],
              "TimeWidget": [Function],
            }
          }
        >
          <form
            className="StyledForm-sc-dhnby8-0 hefeIB"
            noValidate={false}
            onSubmit={[Function]}
          >
            <CustomSchemaField
              disabled={false}
              errorSchema={Object {}}
              formData={Object {}}
              idSchema={
                Object {
                  "$id": "root",
                  "markdownWidget": Object {
                    "$id": "root_markdownWidget",
                  },
                }
              }
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              registry={
                Object {
                  "ArrayFieldTemplate": [Function],
                  "FieldTemplate": [Function],
                  "ObjectFieldTemplate": [Function],
                  "definitions": Object {},
                  "fields": Object {
                    "AnyOfField": [Function],
                    "ArrayField": [Function],
                    "AttachmentsField": [Function],
                    "BooleanField": [Function],
                    "BulletField": [Function],
                    "DescriptionField": [Function],
                    "NullField": [Function],
                    "NumberField": [Function],
                    "ObjectField": [Function],
                    "OneOfField": [Function],
                    "ParagraphField": [Function],
                    "SchemaField": [Function],
                    "StringField": [Function],
                    "TitleField": [Function],
                    "UnsupportedField": [Function],
                  },
                  "formContext": Object {},
                  "rootSchema": Object {
                    "properties": Object {
                      "markdownWidget": Object {
                        "title": "ui:widget: MarkdownEditorWidget",
                        "type": "string",
                      },
                    },
                    "title": "markdown",
                    "type": "object",
                  },
                  "widgets": Object {
                    "AltDateTimeWidget": [Function],
                    "AltDateWidget": [Function],
                    "BaseInput": [Function],
                    "CheckboxWidget": [Function],
                    "CheckboxesWidget": [Function],
                    "ColorWidget": [Function],
                    "DateTimeWidget": [Function],
                    "DateWidget": [Function],
                    "EmailWidget": [Function],
                    "FileWidget": [Function],
                    "HiddenWidget": [Function],
                    "MarkdownEditorWidget": [Function],
                    "OtherRadioWidget": [Function],
                    "PasswordWidget": [Function],
                    "RadioWidget": [Function],
                    "RangeWidget": [Function],
                    "SelectWidget": [Function],
                    "SignatureWidget": [Function],
                    "TextWidget": [Function],
                    "TextareaWidget": [Function],
                    "TimeWidget": [Function],
                    "URLWidget": [Function],
                    "UpDownWidget": [Function],
                  },
                }
              }
              schema={
                Object {
                  "properties": Object {
                    "markdownWidget": Object {
                      "title": "ui:widget: MarkdownEditorWidget",
                      "type": "string",
                    },
                  },
                  "title": "markdown",
                  "type": "object",
                }
              }
              uiSchema={
                Object {
                  "classNames": "column-span-12",
                  "markdownWidget": Object {
                    "classNames": "column-span-12",
                    "ui:widget": "MarkdownEditorWidget",
                  },
                }
              }
            >
              <SchemaField
                autofocus={false}
                disabled={false}
                errorSchema={Object {}}
                formData={Object {}}
                idSchema={
                  Object {
                    "$id": "root",
                    "markdownWidget": Object {
                      "$id": "root_markdownWidget",
                    },
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                readonly={false}
                registry={
                  Object {
                    "ArrayFieldTemplate": [Function],
                    "FieldTemplate": [Function],
                    "ObjectFieldTemplate": [Function],
                    "definitions": Object {},
                    "fields": Object {
                      "AnyOfField": [Function],
                      "ArrayField": [Function],
                      "AttachmentsField": [Function],
                      "BooleanField": [Function],
                      "BulletField": [Function],
                      "DescriptionField": [Function],
                      "NullField": [Function],
                      "NumberField": [Function],
                      "ObjectField": [Function],
                      "OneOfField": [Function],
                      "ParagraphField": [Function],
                      "SchemaField": [Function],
                      "StringField": [Function],
                      "TitleField": [Function],
                      "UnsupportedField": [Function],
                    },
                    "formContext": Object {},
                    "rootSchema": Object {
                      "properties": Object {
                        "markdownWidget": Object {
                          "title": "ui:widget: MarkdownEditorWidget",
                          "type": "string",
                        },
                      },
                      "title": "markdown",
                      "type": "object",
                    },
                    "widgets": Object {
                      "AltDateTimeWidget": [Function],
                      "AltDateWidget": [Function],
                      "BaseInput": [Function],
                      "CheckboxWidget": [Function],
                      "CheckboxesWidget": [Function],
                      "ColorWidget": [Function],
                      "DateTimeWidget": [Function],
                      "DateWidget": [Function],
                      "EmailWidget": [Function],
                      "FileWidget": [Function],
                      "HiddenWidget": [Function],
                      "MarkdownEditorWidget": [Function],
                      "OtherRadioWidget": [Function],
                      "PasswordWidget": [Function],
                      "RadioWidget": [Function],
                      "RangeWidget": [Function],
                      "SelectWidget": [Function],
                      "SignatureWidget": [Function],
                      "TextWidget": [Function],
                      "TextareaWidget": [Function],
                      "TimeWidget": [Function],
                      "URLWidget": [Function],
                      "UpDownWidget": [Function],
                    },
                  }
                }
                schema={
                  Object {
                    "properties": Object {
                      "markdownWidget": Object {
                        "title": "ui:widget: MarkdownEditorWidget",
                        "type": "string",
                      },
                    },
                    "title": "markdown",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "classNames": "column-span-12",
                    "markdownWidget": Object {
                      "classNames": "column-span-12",
                      "ui:widget": "MarkdownEditorWidget",
                    },
                  }
                }
              >
                <FieldTemplate
                  classNames="form-group field field-object  column-span-12"
                  description={
                    <DescriptionField
                      formContext={Object {}}
                      id="root__description"
                    />
                  }
                  disabled={false}
                  displayLabel={false}
                  errors={<ErrorList />}
                  fields={
                    Object {
                      "AnyOfField": [Function],
                      "ArrayField": [Function],
                      "AttachmentsField": [Function],
                      "BooleanField": [Function],
                      "BulletField": [Function],
                      "DescriptionField": [Function],
                      "NullField": [Function],
                      "NumberField": [Function],
                      "ObjectField": [Function],
                      "OneOfField": [Function],
                      "ParagraphField": [Function],
                      "SchemaField": [Function],
                      "StringField": [Function],
                      "TitleField": [Function],
                      "UnsupportedField": [Function],
                    }
                  }
                  formContext={Object {}}
                  formData={Object {}}
                  help={
                    <Help
                      id="root__help"
                    />
                  }
                  hidden={false}
                  id="root"
                  label="markdown"
                  onChange={[Function]}
                  readonly={false}
                  registry={
                    Object {
                      "ArrayFieldTemplate": [Function],
                      "FieldTemplate": [Function],
                      "ObjectFieldTemplate": [Function],
                      "definitions": Object {},
                      "fields": Object {
                        "AnyOfField": [Function],
                        "ArrayField": [Function],
                        "AttachmentsField": [Function],
                        "BooleanField": [Function],
                        "BulletField": [Function],
                        "DescriptionField": [Function],
                        "NullField": [Function],
                        "NumberField": [Function],
                        "ObjectField": [Function],
                        "OneOfField": [Function],
                        "ParagraphField": [Function],
                        "SchemaField": [Function],
                        "StringField": [Function],
                        "TitleField": [Function],
                        "UnsupportedField": [Function],
                      },
                      "formContext": Object {},
                      "rootSchema": Object {
                        "properties": Object {
                          "markdownWidget": Object {
                            "title": "ui:widget: MarkdownEditorWidget",
                            "type": "string",
                          },
                        },
                        "title": "markdown",
                        "type": "object",
                      },
                      "widgets": Object {
                        "AltDateTimeWidget": [Function],
                        "AltDateWidget": [Function],
                        "BaseInput": [Function],
                        "CheckboxWidget": [Function],
                        "CheckboxesWidget": [Function],
                        "ColorWidget": [Function],
                        "DateTimeWidget": [Function],
                        "DateWidget": [Function],
                        "EmailWidget": [Function],
                        "FileWidget": [Function],
                        "HiddenWidget": [Function],
                        "MarkdownEditorWidget": [Function],
                        "OtherRadioWidget": [Function],
                        "PasswordWidget": [Function],
                        "RadioWidget": [Function],
                        "RangeWidget": [Function],
                        "SelectWidget": [Function],
                        "SignatureWidget": [Function],
                        "TextWidget": [Function],
                        "TextareaWidget": [Function],
                        "TimeWidget": [Function],
                        "URLWidget": [Function],
                        "UpDownWidget": [Function],
                      },
                    }
                  }
                  required={false}
                  schema={
                    Object {
                      "properties": Object {
                        "markdownWidget": Object {
                          "title": "ui:widget: MarkdownEditorWidget",
                          "type": "string",
                        },
                      },
                      "title": "markdown",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "classNames": "column-span-12",
                      "markdownWidget": Object {
                        "classNames": "column-span-12",
                        "ui:widget": "MarkdownEditorWidget",
                      },
                    }
                  }
                >
                  <div
                    className="form-group field field-object  column-span-12"
                  >
                    <DescriptionField
                      formContext={Object {}}
                      id="root__description"
                    />
                    <ObjectField
                      autofocus={false}
                      disabled={false}
                      errorSchema={Object {}}
                      formContext={Object {}}
                      formData={Object {}}
                      idSchema={
                        Object {
                          "$id": "root",
                          "markdownWidget": Object {
                            "$id": "root_markdownWidget",
                          },
                        }
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      readonly={false}
                      registry={
                        Object {
                          "ArrayFieldTemplate": [Function],
                          "FieldTemplate": [Function],
                          "ObjectFieldTemplate": [Function],
                          "definitions": Object {},
                          "fields": Object {
                            "AnyOfField": [Function],
                            "ArrayField": [Function],
                            "AttachmentsField": [Function],
                            "BooleanField": [Function],
                            "BulletField": [Function],
                            "DescriptionField": [Function],
                            "NullField": [Function],
                            "NumberField": [Function],
                            "ObjectField": [Function],
                            "OneOfField": [Function],
                            "ParagraphField": [Function],
                            "SchemaField": [Function],
                            "StringField": [Function],
                            "TitleField": [Function],
                            "UnsupportedField": [Function],
                          },
                          "formContext": Object {},
                          "rootSchema": Object {
                            "properties": Object {
                              "markdownWidget": Object {
                                "title": "ui:widget: MarkdownEditorWidget",
                                "type": "string",
                              },
                            },
                            "title": "markdown",
                            "type": "object",
                          },
                          "widgets": Object {
                            "AltDateTimeWidget": [Function],
                            "AltDateWidget": [Function],
                            "BaseInput": [Function],
                            "CheckboxWidget": [Function],
                            "CheckboxesWidget": [Function],
                            "ColorWidget": [Function],
                            "DateTimeWidget": [Function],
                            "DateWidget": [Function],
                            "EmailWidget": [Function],
                            "FileWidget": [Function],
                            "HiddenWidget": [Function],
                            "MarkdownEditorWidget": [Function],
                            "OtherRadioWidget": [Function],
                            "PasswordWidget": [Function],
                            "RadioWidget": [Function],
                            "RangeWidget": [Function],
                            "SelectWidget": [Function],
                            "SignatureWidget": [Function],
                            "TextWidget": [Function],
                            "TextareaWidget": [Function],
                            "TimeWidget": [Function],
                            "URLWidget": [Function],
                            "UpDownWidget": [Function],
                          },
                        }
                      }
                      required={false}
                      schema={
                        Object {
                          "properties": Object {
                            "markdownWidget": Object {
                              "title": "ui:widget: MarkdownEditorWidget",
                              "type": "string",
                            },
                          },
                          "title": "markdown",
                          "type": "object",
                        }
                      }
                      uiSchema={
                        Object {
                          "classNames": undefined,
                          "markdownWidget": Object {
                            "classNames": "column-span-12",
                            "ui:widget": "MarkdownEditorWidget",
                          },
                        }
                      }
                    >
                      <ObjectFieldTemplate
                        DescriptionField={[Function]}
                        TitleField={[Function]}
                        disabled={false}
                        formContext={Object {}}
                        formData={Object {}}
                        idSchema={
                          Object {
                            "$id": "root",
                            "markdownWidget": Object {
                              "$id": "root_markdownWidget",
                            },
                          }
                        }
                        onAddClick={[Function]}
                        properties={
                          Array [
                            Object {
                              "content": <CustomSchemaField
                                disabled={false}
                                idSchema={
                                  Object {
                                    "$id": "root_markdownWidget",
                                  }
                                }
                                name="markdownWidget"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDropPropertyClick={[Function]}
                                onFocus={[Function]}
                                onKeyChange={[Function]}
                                readonly={false}
                                registry={
                                  Object {
                                    "ArrayFieldTemplate": [Function],
                                    "FieldTemplate": [Function],
                                    "ObjectFieldTemplate": [Function],
                                    "definitions": Object {},
                                    "fields": Object {
                                      "AnyOfField": [Function],
                                      "ArrayField": [Function],
                                      "AttachmentsField": [Function],
                                      "BooleanField": [Function],
                                      "BulletField": [Function],
                                      "DescriptionField": [Function],
                                      "NullField": [Function],
                                      "NumberField": [Function],
                                      "ObjectField": [Function],
                                      "OneOfField": [Function],
                                      "ParagraphField": [Function],
                                      "SchemaField": [Function],
                                      "StringField": [Function],
                                      "TitleField": [Function],
                                      "UnsupportedField": [Function],
                                    },
                                    "formContext": Object {},
                                    "rootSchema": Object {
                                      "properties": Object {
                                        "markdownWidget": Object {
                                          "title": "ui:widget: MarkdownEditorWidget",
                                          "type": "string",
                                        },
                                      },
                                      "title": "markdown",
                                      "type": "object",
                                    },
                                    "widgets": Object {
                                      "AltDateTimeWidget": [Function],
                                      "AltDateWidget": [Function],
                                      "BaseInput": [Function],
                                      "CheckboxWidget": [Function],
                                      "CheckboxesWidget": [Function],
                                      "ColorWidget": [Function],
                                      "DateTimeWidget": [Function],
                                      "DateWidget": [Function],
                                      "EmailWidget": [Function],
                                      "FileWidget": [Function],
                                      "HiddenWidget": [Function],
                                      "MarkdownEditorWidget": [Function],
                                      "OtherRadioWidget": [Function],
                                      "PasswordWidget": [Function],
                                      "RadioWidget": [Function],
                                      "RangeWidget": [Function],
                                      "SelectWidget": [Function],
                                      "SignatureWidget": [Function],
                                      "TextWidget": [Function],
                                      "TextareaWidget": [Function],
                                      "TimeWidget": [Function],
                                      "URLWidget": [Function],
                                      "UpDownWidget": [Function],
                                    },
                                  }
                                }
                                required={false}
                                schema={
                                  Object {
                                    "title": "ui:widget: MarkdownEditorWidget",
                                    "type": "string",
                                  }
                                }
                                uiSchema={
                                  Object {
                                    "classNames": "column-span-12",
                                    "ui:widget": "MarkdownEditorWidget",
                                  }
                                }
                                wasPropertyKeyModified={false}
                              />,
                              "disabled": false,
                              "hidden": false,
                              "name": "markdownWidget",
                              "readonly": false,
                              "required": false,
                            },
                          ]
                        }
                        readonly={false}
                        registry={
                          Object {
                            "ArrayFieldTemplate": [Function],
                            "FieldTemplate": [Function],
                            "ObjectFieldTemplate": [Function],
                            "definitions": Object {},
                            "fields": Object {
                              "AnyOfField": [Function],
                              "ArrayField": [Function],
                              "AttachmentsField": [Function],
                              "BooleanField": [Function],
                              "BulletField": [Function],
                              "DescriptionField": [Function],
                              "NullField": [Function],
                              "NumberField": [Function],
                              "ObjectField": [Function],
                              "OneOfField": [Function],
                              "ParagraphField": [Function],
                              "SchemaField": [Function],
                              "StringField": [Function],
                              "TitleField": [Function],
                              "UnsupportedField": [Function],
                            },
                            "formContext": Object {},
                            "rootSchema": Object {
                              "properties": Object {
                                "markdownWidget": Object {
                                  "title": "ui:widget: MarkdownEditorWidget",
                                  "type": "string",
                                },
                              },
                              "title": "markdown",
                              "type": "object",
                            },
                            "widgets": Object {
                              "AltDateTimeWidget": [Function],
                              "AltDateWidget": [Function],
                              "BaseInput": [Function],
                              "CheckboxWidget": [Function],
                              "CheckboxesWidget": [Function],
                              "ColorWidget": [Function],
                              "DateTimeWidget": [Function],
                              "DateWidget": [Function],
                              "EmailWidget": [Function],
                              "FileWidget": [Function],
                              "HiddenWidget": [Function],
                              "MarkdownEditorWidget": [Function],
                              "OtherRadioWidget": [Function],
                              "PasswordWidget": [Function],
                              "RadioWidget": [Function],
                              "RangeWidget": [Function],
                              "SelectWidget": [Function],
                              "SignatureWidget": [Function],
                              "TextWidget": [Function],
                              "TextareaWidget": [Function],
                              "TimeWidget": [Function],
                              "URLWidget": [Function],
                              "UpDownWidget": [Function],
                            },
                          }
                        }
                        required={false}
                        schema={
                          Object {
                            "properties": Object {
                              "markdownWidget": Object {
                                "title": "ui:widget: MarkdownEditorWidget",
                                "type": "string",
                              },
                            },
                            "title": "markdown",
                            "type": "object",
                          }
                        }
                        title="markdown"
                        uiSchema={
                          Object {
                            "classNames": undefined,
                            "markdownWidget": Object {
                              "classNames": "column-span-12",
                              "ui:widget": "MarkdownEditorWidget",
                            },
                          }
                        }
                      >
                        <div>
                          <TitleField
                            id="root__title"
                            required={false}
                            title="markdown"
                          >
                            <legend
                              id="root__title"
                            >
                              markdown
                            </legend>
                          </TitleField>
                          <CustomSchemaField
                            disabled={false}
                            idSchema={
                              Object {
                                "$id": "root_markdownWidget",
                              }
                            }
                            key="markdownWidget"
                            name="markdownWidget"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDropPropertyClick={[Function]}
                            onFocus={[Function]}
                            onKeyChange={[Function]}
                            readonly={false}
                            registry={
                              Object {
                                "ArrayFieldTemplate": [Function],
                                "FieldTemplate": [Function],
                                "ObjectFieldTemplate": [Function],
                                "definitions": Object {},
                                "fields": Object {
                                  "AnyOfField": [Function],
                                  "ArrayField": [Function],
                                  "AttachmentsField": [Function],
                                  "BooleanField": [Function],
                                  "BulletField": [Function],
                                  "DescriptionField": [Function],
                                  "NullField": [Function],
                                  "NumberField": [Function],
                                  "ObjectField": [Function],
                                  "OneOfField": [Function],
                                  "ParagraphField": [Function],
                                  "SchemaField": [Function],
                                  "StringField": [Function],
                                  "TitleField": [Function],
                                  "UnsupportedField": [Function],
                                },
                                "formContext": Object {},
                                "rootSchema": Object {
                                  "properties": Object {
                                    "markdownWidget": Object {
                                      "title": "ui:widget: MarkdownEditorWidget",
                                      "type": "string",
                                    },
                                  },
                                  "title": "markdown",
                                  "type": "object",
                                },
                                "widgets": Object {
                                  "AltDateTimeWidget": [Function],
                                  "AltDateWidget": [Function],
                                  "BaseInput": [Function],
                                  "CheckboxWidget": [Function],
                                  "CheckboxesWidget": [Function],
                                  "ColorWidget": [Function],
                                  "DateTimeWidget": [Function],
                                  "DateWidget": [Function],
                                  "EmailWidget": [Function],
                                  "FileWidget": [Function],
                                  "HiddenWidget": [Function],
                                  "MarkdownEditorWidget": [Function],
                                  "OtherRadioWidget": [Function],
                                  "PasswordWidget": [Function],
                                  "RadioWidget": [Function],
                                  "RangeWidget": [Function],
                                  "SelectWidget": [Function],
                                  "SignatureWidget": [Function],
                                  "TextWidget": [Function],
                                  "TextareaWidget": [Function],
                                  "TimeWidget": [Function],
                                  "URLWidget": [Function],
                                  "UpDownWidget": [Function],
                                },
                              }
                            }
                            required={false}
                            schema={
                              Object {
                                "title": "ui:widget: MarkdownEditorWidget",
                                "type": "string",
                              }
                            }
                            uiSchema={
                              Object {
                                "classNames": "column-span-12",
                                "ui:widget": "MarkdownEditorWidget",
                              }
                            }
                            wasPropertyKeyModified={false}
                          >
                            <SchemaField
                              autofocus={false}
                              disabled={false}
                              errorSchema={Object {}}
                              idSchema={
                                Object {
                                  "$id": "root_markdownWidget",
                                }
                              }
                              name="markdownWidget"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onDropPropertyClick={[Function]}
                              onFocus={[Function]}
                              onKeyChange={[Function]}
                              readonly={false}
                              registry={
                                Object {
                                  "ArrayFieldTemplate": [Function],
                                  "FieldTemplate": [Function],
                                  "ObjectFieldTemplate": [Function],
                                  "definitions": Object {},
                                  "fields": Object {
                                    "AnyOfField": [Function],
                                    "ArrayField": [Function],
                                    "AttachmentsField": [Function],
                                    "BooleanField": [Function],
                                    "BulletField": [Function],
                                    "DescriptionField": [Function],
                                    "NullField": [Function],
                                    "NumberField": [Function],
                                    "ObjectField": [Function],
                                    "OneOfField": [Function],
                                    "ParagraphField": [Function],
                                    "SchemaField": [Function],
                                    "StringField": [Function],
                                    "TitleField": [Function],
                                    "UnsupportedField": [Function],
                                  },
                                  "formContext": Object {},
                                  "rootSchema": Object {
                                    "properties": Object {
                                      "markdownWidget": Object {
                                        "title": "ui:widget: MarkdownEditorWidget",
                                        "type": "string",
                                      },
                                    },
                                    "title": "markdown",
                                    "type": "object",
                                  },
                                  "widgets": Object {
                                    "AltDateTimeWidget": [Function],
                                    "AltDateWidget": [Function],
                                    "BaseInput": [Function],
                                    "CheckboxWidget": [Function],
                                    "CheckboxesWidget": [Function],
                                    "ColorWidget": [Function],
                                    "DateTimeWidget": [Function],
                                    "DateWidget": [Function],
                                    "EmailWidget": [Function],
                                    "FileWidget": [Function],
                                    "HiddenWidget": [Function],
                                    "MarkdownEditorWidget": [Function],
                                    "OtherRadioWidget": [Function],
                                    "PasswordWidget": [Function],
                                    "RadioWidget": [Function],
                                    "RangeWidget": [Function],
                                    "SelectWidget": [Function],
                                    "SignatureWidget": [Function],
                                    "TextWidget": [Function],
                                    "TextareaWidget": [Function],
                                    "TimeWidget": [Function],
                                    "URLWidget": [Function],
                                    "UpDownWidget": [Function],
                                  },
                                }
                              }
                              required={false}
                              schema={
                                Object {
                                  "title": "ui:widget: MarkdownEditorWidget",
                                  "type": "string",
                                }
                              }
                              uiSchema={
                                Object {
                                  "classNames": "column-span-12",
                                  "ui:widget": "MarkdownEditorWidget",
                                }
                              }
                              wasPropertyKeyModified={false}
                            >
                              <FieldTemplate
                                classNames="form-group field field-string  column-span-12"
                                description={
                                  <DescriptionField
                                    formContext={Object {}}
                                    id="root_markdownWidget__description"
                                  />
                                }
                                disabled={false}
                                displayLabel={true}
                                errors={<ErrorList />}
                                fields={
                                  Object {
                                    "AnyOfField": [Function],
                                    "ArrayField": [Function],
                                    "AttachmentsField": [Function],
                                    "BooleanField": [Function],
                                    "BulletField": [Function],
                                    "DescriptionField": [Function],
                                    "NullField": [Function],
                                    "NumberField": [Function],
                                    "ObjectField": [Function],
                                    "OneOfField": [Function],
                                    "ParagraphField": [Function],
                                    "SchemaField": [Function],
                                    "StringField": [Function],
                                    "TitleField": [Function],
                                    "UnsupportedField": [Function],
                                  }
                                }
                                formContext={Object {}}
                                help={
                                  <Help
                                    id="root_markdownWidget__help"
                                  />
                                }
                                hidden={false}
                                id="root_markdownWidget"
                                label="ui:widget: MarkdownEditorWidget"
                                onChange={[Function]}
                                onDropPropertyClick={[Function]}
                                onKeyChange={[Function]}
                                readonly={false}
                                registry={
                                  Object {
                                    "ArrayFieldTemplate": [Function],
                                    "FieldTemplate": [Function],
                                    "ObjectFieldTemplate": [Function],
                                    "definitions": Object {},
                                    "fields": Object {
                                      "AnyOfField": [Function],
                                      "ArrayField": [Function],
                                      "AttachmentsField": [Function],
                                      "BooleanField": [Function],
                                      "BulletField": [Function],
                                      "DescriptionField": [Function],
                                      "NullField": [Function],
                                      "NumberField": [Function],
                                      "ObjectField": [Function],
                                      "OneOfField": [Function],
                                      "ParagraphField": [Function],
                                      "SchemaField": [Function],
                                      "StringField": [Function],
                                      "TitleField": [Function],
                                      "UnsupportedField": [Function],
                                    },
                                    "formContext": Object {},
                                    "rootSchema": Object {
                                      "properties": Object {
                                        "markdownWidget": Object {
                                          "title": "ui:widget: MarkdownEditorWidget",
                                          "type": "string",
                                        },
                                      },
                                      "title": "markdown",
                                      "type": "object",
                                    },
                                    "widgets": Object {
                                      "AltDateTimeWidget": [Function],
                                      "AltDateWidget": [Function],
                                      "BaseInput": [Function],
                                      "CheckboxWidget": [Function],
                                      "CheckboxesWidget": [Function],
                                      "ColorWidget": [Function],
                                      "DateTimeWidget": [Function],
                                      "DateWidget": [Function],
                                      "EmailWidget": [Function],
                                      "FileWidget": [Function],
                                      "HiddenWidget": [Function],
                                      "MarkdownEditorWidget": [Function],
                                      "OtherRadioWidget": [Function],
                                      "PasswordWidget": [Function],
                                      "RadioWidget": [Function],
                                      "RangeWidget": [Function],
                                      "SelectWidget": [Function],
                                      "SignatureWidget": [Function],
                                      "TextWidget": [Function],
                                      "TextareaWidget": [Function],
                                      "TimeWidget": [Function],
                                      "URLWidget": [Function],
                                      "UpDownWidget": [Function],
                                    },
                                  }
                                }
                                required={false}
                                schema={
                                  Object {
                                    "title": "ui:widget: MarkdownEditorWidget",
                                    "type": "string",
                                  }
                                }
                                uiSchema={
                                  Object {
                                    "classNames": "column-span-12",
                                    "ui:widget": "MarkdownEditorWidget",
                                  }
                                }
                              >
                                <div
                                  className="form-group field field-string  column-span-12"
                                >
                                  <FieldTemplate__FieldLabel
                                    htmlFor="root_markdownWidget"
                                    required={false}
                                  >
                                    <label
                                      className="sc-iCoGMd FieldTemplate__FieldLabel-sc-1c6bjb1-1 cJpiAY kUmlnF"
                                      htmlFor="root_markdownWidget"
                                      required={false}
                                    >
                                      ui:widget: MarkdownEditorWidget
                                    </label>
                                  </FieldTemplate__FieldLabel>
                                  <DescriptionField
                                    formContext={Object {}}
                                    id="root_markdownWidget__description"
                                  />
                                  <StringField
                                    autofocus={false}
                                    disabled={false}
                                    errorSchema={Object {}}
                                    formContext={Object {}}
                                    idSchema={
                                      Object {
                                        "$id": "root_markdownWidget",
                                      }
                                    }
                                    name="markdownWidget"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDropPropertyClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyChange={[Function]}
                                    readonly={false}
                                    registry={
                                      Object {
                                        "ArrayFieldTemplate": [Function],
                                        "FieldTemplate": [Function],
                                        "ObjectFieldTemplate": [Function],
                                        "definitions": Object {},
                                        "fields": Object {
                                          "AnyOfField": [Function],
                                          "ArrayField": [Function],
                                          "AttachmentsField": [Function],
                                          "BooleanField": [Function],
                                          "BulletField": [Function],
                                          "DescriptionField": [Function],
                                          "NullField": [Function],
                                          "NumberField": [Function],
                                          "ObjectField": [Function],
                                          "OneOfField": [Function],
                                          "ParagraphField": [Function],
                                          "SchemaField": [Function],
                                          "StringField": [Function],
                                          "TitleField": [Function],
                                          "UnsupportedField": [Function],
                                        },
                                        "formContext": Object {},
                                        "rootSchema": Object {
                                          "properties": Object {
                                            "markdownWidget": Object {
                                              "title": "ui:widget: MarkdownEditorWidget",
                                              "type": "string",
                                            },
                                          },
                                          "title": "markdown",
                                          "type": "object",
                                        },
                                        "widgets": Object {
                                          "AltDateTimeWidget": [Function],
                                          "AltDateWidget": [Function],
                                          "BaseInput": [Function],
                                          "CheckboxWidget": [Function],
                                          "CheckboxesWidget": [Function],
                                          "ColorWidget": [Function],
                                          "DateTimeWidget": [Function],
                                          "DateWidget": [Function],
                                          "EmailWidget": [Function],
                                          "FileWidget": [Function],
                                          "HiddenWidget": [Function],
                                          "MarkdownEditorWidget": [Function],
                                          "OtherRadioWidget": [Function],
                                          "PasswordWidget": [Function],
                                          "RadioWidget": [Function],
                                          "RangeWidget": [Function],
                                          "SelectWidget": [Function],
                                          "SignatureWidget": [Function],
                                          "TextWidget": [Function],
                                          "TextareaWidget": [Function],
                                          "TimeWidget": [Function],
                                          "URLWidget": [Function],
                                          "UpDownWidget": [Function],
                                        },
                                      }
                                    }
                                    required={false}
                                    schema={
                                      Object {
                                        "title": "ui:widget: MarkdownEditorWidget",
                                        "type": "string",
                                      }
                                    }
                                    uiSchema={
                                      Object {
                                        "classNames": undefined,
                                        "ui:widget": "MarkdownEditorWidget",
                                      }
                                    }
                                    wasPropertyKeyModified={false}
                                  >
                                    <Component
                                      autofocus={false}
                                      disabled={false}
                                      formContext={Object {}}
                                      id="root_markdownWidget"
                                      label="ui:widget: MarkdownEditorWidget"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      options={
                                        Object {
                                          "enumOptions": false,
                                        }
                                      }
                                      placeholder=""
                                      readonly={false}
                                      registry={
                                        Object {
                                          "ArrayFieldTemplate": [Function],
                                          "FieldTemplate": [Function],
                                          "ObjectFieldTemplate": [Function],
                                          "definitions": Object {},
                                          "fields": Object {
                                            "AnyOfField": [Function],
                                            "ArrayField": [Function],
                                            "AttachmentsField": [Function],
                                            "BooleanField": [Function],
                                            "BulletField": [Function],
                                            "DescriptionField": [Function],
                                            "NullField": [Function],
                                            "NumberField": [Function],
                                            "ObjectField": [Function],
                                            "OneOfField": [Function],
                                            "ParagraphField": [Function],
                                            "SchemaField": [Function],
                                            "StringField": [Function],
                                            "TitleField": [Function],
                                            "UnsupportedField": [Function],
                                          },
                                          "formContext": Object {},
                                          "rootSchema": Object {
                                            "properties": Object {
                                              "markdownWidget": Object {
                                                "title": "ui:widget: MarkdownEditorWidget",
                                                "type": "string",
                                              },
                                            },
                                            "title": "markdown",
                                            "type": "object",
                                          },
                                          "widgets": Object {
                                            "AltDateTimeWidget": [Function],
                                            "AltDateWidget": [Function],
                                            "BaseInput": [Function],
                                            "CheckboxWidget": [Function],
                                            "CheckboxesWidget": [Function],
                                            "ColorWidget": [Function],
                                            "DateTimeWidget": [Function],
                                            "DateWidget": [Function],
                                            "EmailWidget": [Function],
                                            "FileWidget": [Function],
                                            "HiddenWidget": [Function],
                                            "MarkdownEditorWidget": [Function],
                                            "OtherRadioWidget": [Function],
                                            "PasswordWidget": [Function],
                                            "RadioWidget": [Function],
                                            "RangeWidget": [Function],
                                            "SelectWidget": [Function],
                                            "SignatureWidget": [Function],
                                            "TextWidget": [Function],
                                            "TextareaWidget": [Function],
                                            "TimeWidget": [Function],
                                            "URLWidget": [Function],
                                            "UpDownWidget": [Function],
                                          },
                                        }
                                      }
                                      required={false}
                                      schema={
                                        Object {
                                          "title": "ui:widget: MarkdownEditorWidget",
                                          "type": "string",
                                        }
                                      }
                                      uiSchema={
                                        Object {
                                          "classNames": undefined,
                                          "ui:widget": "MarkdownEditorWidget",
                                        }
                                      }
                                    >
                                      <MarkdownEditorWidget
                                        autofocus={false}
                                        disabled={false}
                                        formContext={Object {}}
                                        id="root_markdownWidget"
                                        label="ui:widget: MarkdownEditorWidget"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Object {
                                            "enumOptions": false,
                                          }
                                        }
                                        placeholder=""
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "AttachmentsField": [Function],
                                              "BooleanField": [Function],
                                              "BulletField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "ParagraphField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {},
                                            "rootSchema": Object {
                                              "properties": Object {
                                                "markdownWidget": Object {
                                                  "title": "ui:widget: MarkdownEditorWidget",
                                                  "type": "string",
                                                },
                                              },
                                              "title": "markdown",
                                              "type": "object",
                                            },
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "MarkdownEditorWidget": [Function],
                                              "OtherRadioWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "SignatureWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "TimeWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "title": "ui:widget: MarkdownEditorWidget",
                                            "type": "string",
                                          }
                                        }
                                        uiSchema={
                                          Object {
                                            "classNames": undefined,
                                            "ui:widget": "MarkdownEditorWidget",
                                          }
                                        }
                                      >
                                        <EI
                                          autoFocus={false}
                                          disabled={false}
                                          id="root_markdownWidget"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          readOnly={false}
                                          rows={4}
                                        >
                                          <div>
                                            <ForwardRef
                                              aria-label="markdown editor tabs"
                                              indicatorColor="primary"
                                              onChange={[Function]}
                                              textColor="primary"
                                              value="edit"
                                            >
                                              <ForwardRef
                                                aria-label="markdown editor tabs"
                                                classes={
                                                  Object {
                                                    "centered": "MuiTabs-centered",
                                                    "fixed": "MuiTabs-fixed",
                                                    "flexContainer": "MuiTabs-flexContainer",
                                                    "flexContainerVertical": "MuiTabs-flexContainerVertical",
                                                    "indicator": "MuiTabs-indicator",
                                                    "root": "MuiTabs-root",
                                                    "scrollButtons": "MuiTabs-scrollButtons",
                                                    "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                                    "scrollable": "MuiTabs-scrollable",
                                                    "scroller": "MuiTabs-scroller",
                                                    "vertical": "MuiTabs-vertical",
                                                  }
                                                }
                                                indicatorColor="primary"
                                                onChange={[Function]}
                                                textColor="primary"
                                                value="edit"
                                              >
                                                <div
                                                  className="MuiTabs-root"
                                                >
                                                  <div
                                                    className="MuiTabs-scroller MuiTabs-fixed"
                                                    onScroll={[Function]}
                                                    style={
                                                      Object {
                                                        "marginBottom": null,
                                                        "overflow": "hidden",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      aria-label="markdown editor tabs"
                                                      className="MuiTabs-flexContainer"
                                                      onKeyDown={[Function]}
                                                      role="tablist"
                                                    >
                                                      <ForwardRef
                                                        fullWidth={false}
                                                        indicator={false}
                                                        key=".0"
                                                        label="Edit"
                                                        onChange={[Function]}
                                                        selected={true}
                                                        textColor="primary"
                                                        value="edit"
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "fullWidth": "MuiTab-fullWidth",
                                                              "labelIcon": "MuiTab-labelIcon",
                                                              "root": "MuiTab-root",
                                                              "selected": "Mui-selected",
                                                              "textColorInherit": "MuiTab-textColorInherit",
                                                              "textColorPrimary": "MuiTab-textColorPrimary",
                                                              "textColorSecondary": "MuiTab-textColorSecondary",
                                                              "wrapped": "MuiTab-wrapped",
                                                              "wrapper": "MuiTab-wrapper",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          indicator={false}
                                                          label="Edit"
                                                          onChange={[Function]}
                                                          selected={true}
                                                          textColor="primary"
                                                          value="edit"
                                                        >
                                                          <ForwardRef
                                                            aria-selected={true}
                                                            className="MuiTab-root MuiTab-textColorPrimary Mui-selected"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            role="tab"
                                                            tabIndex={0}
                                                          >
                                                            <ForwardRef
                                                              aria-selected={true}
                                                              className="MuiTab-root MuiTab-textColorPrimary Mui-selected"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              role="tab"
                                                              tabIndex={0}
                                                            >
                                                              <button
                                                                aria-selected={true}
                                                                className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary Mui-selected"
                                                                disabled={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="tab"
                                                                tabIndex={0}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiTab-wrapper"
                                                                >
                                                                  Edit
                                                                </span>
                                                                <ForwardRef
                                                                  center={false}
                                                                >
                                                                  <ForwardRef
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <t
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef>
                                                                </ForwardRef>
                                                              </button>
                                                            </ForwardRef>
                                                          </ForwardRef>
                                                        </ForwardRef>
                                                      </ForwardRef>
                                                      <ForwardRef
                                                        fullWidth={false}
                                                        indicator={false}
                                                        key=".1"
                                                        label="Preview"
                                                        onChange={[Function]}
                                                        selected={false}
                                                        textColor="primary"
                                                        value="preview"
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "fullWidth": "MuiTab-fullWidth",
                                                              "labelIcon": "MuiTab-labelIcon",
                                                              "root": "MuiTab-root",
                                                              "selected": "Mui-selected",
                                                              "textColorInherit": "MuiTab-textColorInherit",
                                                              "textColorPrimary": "MuiTab-textColorPrimary",
                                                              "textColorSecondary": "MuiTab-textColorSecondary",
                                                              "wrapped": "MuiTab-wrapped",
                                                              "wrapper": "MuiTab-wrapper",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          indicator={false}
                                                          label="Preview"
                                                          onChange={[Function]}
                                                          selected={false}
                                                          textColor="primary"
                                                          value="preview"
                                                        >
                                                          <ForwardRef
                                                            aria-selected={false}
                                                            className="MuiTab-root MuiTab-textColorPrimary"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            role="tab"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef
                                                              aria-selected={false}
                                                              className="MuiTab-root MuiTab-textColorPrimary"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              role="tab"
                                                              tabIndex={-1}
                                                            >
                                                              <button
                                                                aria-selected={false}
                                                                className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary"
                                                                disabled={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="tab"
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiTab-wrapper"
                                                                >
                                                                  Preview
                                                                </span>
                                                                <ForwardRef
                                                                  center={false}
                                                                >
                                                                  <ForwardRef
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <t
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef>
                                                                </ForwardRef>
                                                              </button>
                                                            </ForwardRef>
                                                          </ForwardRef>
                                                        </ForwardRef>
                                                      </ForwardRef>
                                                    </div>
                                                    <ForwardRef
                                                      className="MuiTabs-indicator"
                                                      color="primary"
                                                      orientation="horizontal"
                                                      style={
                                                        Object {
                                                          "left": 0,
                                                          "width": 0,
                                                        }
                                                      }
                                                    >
                                                      <ForwardRef
                                                        className="MuiTabs-indicator"
                                                        classes={
                                                          Object {
                                                            "colorPrimary": "jss2",
                                                            "colorSecondary": "jss3",
                                                            "root": "jss1",
                                                            "vertical": "jss4",
                                                          }
                                                        }
                                                        color="primary"
                                                        orientation="horizontal"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "width": 0,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="jss1 jss2 MuiTabs-indicator"
                                                          style={
                                                            Object {
                                                              "left": 0,
                                                              "width": 0,
                                                            }
                                                          }
                                                        />
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </div>
                                                </div>
                                              </ForwardRef>
                                            </ForwardRef>
                                            <styled.div
                                              show={true}
                                            >
                                              <div
                                                className="sc-eJocfa bQgvBF"
                                              >
                                                <Styled(Component)
                                                  autoFocus={false}
                                                  disabled={false}
                                                  id="root_markdownWidget"
                                                  inputRef={
                                                    Object {
                                                      "current": <textarea
                                                        aria-invalid="false"
                                                        class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                        id="root_markdownWidget"
                                                        rows="4"
                                                        style="resize: vertical;"
                                                      />,
                                                    }
                                                  }
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  readOnly={false}
                                                  rows={4}
                                                >
                                                  <ForwardRef
                                                    autoFocus={false}
                                                    className="sc-oeezt hkNutY"
                                                    disabled={false}
                                                    id="root_markdownWidget"
                                                    inputRef={
                                                      Object {
                                                        "current": <textarea
                                                          aria-invalid="false"
                                                          class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                          id="root_markdownWidget"
                                                          rows="4"
                                                          style="resize: vertical;"
                                                        />,
                                                      }
                                                    }
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    readOnly={false}
                                                    rows={4}
                                                  >
                                                    <ForwardRef
                                                      autoFocus={false}
                                                      className="sc-oeezt hkNutY"
                                                      disabled={false}
                                                      fullWidth={true}
                                                      id="root_markdownWidget"
                                                      inputProps={
                                                        Object {
                                                          "style": Object {
                                                            "resize": "vertical",
                                                          },
                                                        }
                                                      }
                                                      inputRef={
                                                        Object {
                                                          "current": <textarea
                                                            aria-invalid="false"
                                                            class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                            id="root_markdownWidget"
                                                            rows="4"
                                                            style="resize: vertical;"
                                                          />,
                                                        }
                                                      }
                                                      multiline={true}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      readOnly={false}
                                                      rows={4}
                                                      variant="filled"
                                                    >
                                                      <ForwardRef
                                                        autoFocus={false}
                                                        className="sc-oeezt hkNutY"
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        fullWidth={true}
                                                        id="root_markdownWidget"
                                                        inputProps={
                                                          Object {
                                                            "style": Object {
                                                              "resize": "vertical",
                                                            },
                                                          }
                                                        }
                                                        inputRef={
                                                          Object {
                                                            "current": <textarea
                                                              aria-invalid="false"
                                                              class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                              id="root_markdownWidget"
                                                              rows="4"
                                                              style="resize: vertical;"
                                                            />,
                                                          }
                                                        }
                                                        multiline={true}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        readOnly={false}
                                                        rows={4}
                                                        variant="filled"
                                                      >
                                                        <ForwardRef
                                                          className="MuiTextField-root sc-oeezt hkNutY"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          fullWidth={true}
                                                          readOnly={false}
                                                          required={false}
                                                          variant="filled"
                                                        >
                                                          <ForwardRef
                                                            className="MuiTextField-root sc-oeezt hkNutY"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            fullWidth={true}
                                                            readOnly={false}
                                                            required={false}
                                                            variant="filled"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root sc-oeezt hkNutY MuiFormControl-fullWidth"
                                                              readOnly={false}
                                                            >
                                                              <ForwardRef
                                                                autoFocus={false}
                                                                fullWidth={true}
                                                                id="root_markdownWidget"
                                                                inputProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "resize": "vertical",
                                                                    },
                                                                  }
                                                                }
                                                                inputRef={
                                                                  Object {
                                                                    "current": <textarea
                                                                      aria-invalid="false"
                                                                      class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                                      id="root_markdownWidget"
                                                                      rows="4"
                                                                      style="resize: vertical;"
                                                                    />,
                                                                  }
                                                                }
                                                                multiline={true}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                rows={4}
                                                              >
                                                                <ForwardRef
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                      "adornedStart": "MuiFilledInput-adornedStart",
                                                                      "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiFilledInput-input",
                                                                      "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                      "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                      "marginDense": "MuiFilledInput-marginDense",
                                                                      "multiline": "MuiFilledInput-multiline",
                                                                      "root": "MuiFilledInput-root",
                                                                      "underline": "MuiFilledInput-underline",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="root_markdownWidget"
                                                                  inputProps={
                                                                    Object {
                                                                      "style": Object {
                                                                        "resize": "vertical",
                                                                      },
                                                                    }
                                                                  }
                                                                  inputRef={
                                                                    Object {
                                                                      "current": <textarea
                                                                        aria-invalid="false"
                                                                        class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                                        id="root_markdownWidget"
                                                                        rows="4"
                                                                        style="resize: vertical;"
                                                                      />,
                                                                    }
                                                                  }
                                                                  multiline={true}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  rows={4}
                                                                >
                                                                  <ForwardRef
                                                                    autoFocus={false}
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                        "adornedStart": "MuiFilledInput-adornedStart",
                                                                        "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "input": "MuiFilledInput-input",
                                                                        "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                        "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                        "marginDense": "MuiFilledInput-marginDense",
                                                                        "multiline": "MuiFilledInput-multiline",
                                                                        "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={true}
                                                                    id="root_markdownWidget"
                                                                    inputComponent="input"
                                                                    inputProps={
                                                                      Object {
                                                                        "style": Object {
                                                                          "resize": "vertical",
                                                                        },
                                                                      }
                                                                    }
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <textarea
                                                                          aria-invalid="false"
                                                                          class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                                          id="root_markdownWidget"
                                                                          rows="4"
                                                                          style="resize: vertical;"
                                                                        />,
                                                                      }
                                                                    }
                                                                    multiline={true}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    rows={4}
                                                                    type="text"
                                                                  >
                                                                    <ForwardRef
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                                          "input": "MuiInputBase-input MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                          "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      id="root_markdownWidget"
                                                                      inputComponent="input"
                                                                      inputProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "resize": "vertical",
                                                                          },
                                                                        }
                                                                      }
                                                                      inputRef={
                                                                        Object {
                                                                          "current": <textarea
                                                                            aria-invalid="false"
                                                                            class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                                            id="root_markdownWidget"
                                                                            rows="4"
                                                                            style="resize: vertical;"
                                                                          />,
                                                                        }
                                                                      }
                                                                      multiline={true}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      rows={4}
                                                                      type="text"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-multiline MuiFilledInput-multiline"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <textarea
                                                                          aria-invalid={false}
                                                                          autoFocus={false}
                                                                          className="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputMultiline MuiFilledInput-inputMultiline"
                                                                          disabled={false}
                                                                          id="root_markdownWidget"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          rows={4}
                                                                          style={
                                                                            Object {
                                                                              "resize": "vertical",
                                                                            }
                                                                          }
                                                                        />
                                                                      </div>
                                                                    </ForwardRef>
                                                                  </ForwardRef>
                                                                </ForwardRef>
                                                              </ForwardRef>
                                                            </div>
                                                          </ForwardRef>
                                                        </ForwardRef>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </ForwardRef>
                                                </Styled(Component)>
                                              </div>
                                            </styled.div>
                                            <styled.div
                                              show={false}
                                            >
                                              <div
                                                className="sc-eJocfa dikmgq"
                                              >
                                                <pI>
                                                  <styled.div>
                                                    <div
                                                      className="sc-jffHpj eSArFH"
                                                    >
                                                      <_
                                                        rehypePlugins={
                                                          Array [
                                                            Array [
                                                              [Function],
                                                              Object {
                                                                "ignoreMissing": true,
                                                              },
                                                            ],
                                                          ]
                                                        }
                                                        remarkPlugins={
                                                          Array [
                                                            [Function],
                                                          ]
                                                        }
                                                        transformLinkUri={[Function]}
                                                      />
                                                    </div>
                                                  </styled.div>
                                                </pI>
                                              </div>
                                            </styled.div>
                                          </div>
                                        </EI>
                                      </MarkdownEditorWidget>
                                    </Component>
                                  </StringField>
                                  <Help
                                    id="root_markdownWidget__help"
                                  />
                                </div>
                              </FieldTemplate>
                            </SchemaField>
                          </CustomSchemaField>
                        </div>
                      </ObjectFieldTemplate>
                    </ObjectField>
                    <Help
                      id="root__help"
                    />
                  </div>
                </FieldTemplate>
              </SchemaField>
            </CustomSchemaField>
            <ActionGroup>
              <div
                className="ActionGroup-sc-1hp5mpm-0 cEaQxJ"
              >
                <ForwardRef
                  color="primary"
                  isLoading={false}
                  type="submit"
                  variant="contained"
                >
                  <NE
                    color="primary"
                    forwardRef={null}
                    isLoading={false}
                    type="submit"
                    variant="contained"
                  >
                    <ForwardRef
                      className="jss17"
                      color="default"
                      disableElevation={false}
                      disableRipple={true}
                      disabled={false}
                      type="submit"
                      variant="contained"
                    >
                      <ForwardRef
                        className="jss17"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="default"
                        disableElevation={false}
                        disableRipple={true}
                        disabled={false}
                        type="submit"
                        variant="contained"
                      >
                        <ForwardRef
                          className="MuiButton-root MuiButton-contained jss17"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          type="submit"
                        >
                          <ForwardRef
                            className="MuiButton-root MuiButton-contained jss17"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            type="submit"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-contained jss17"
                              disabled={false}
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="submit"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                Submit
                              </span>
                            </button>
                          </ForwardRef>
                        </ForwardRef>
                      </ForwardRef>
                    </ForwardRef>
                  </NE>
                </ForwardRef>
              </div>
            </ActionGroup>
          </form>
        </Form>
      </StyledForm>
    </Form>
  </ForwardRef>
</MockForm>
`;
