// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioWidget should match snapshot 1`] = `
<MockForm>
  <ForwardRef
    schema={
      Object {
        "properties": Object {
          "radio": Object {
            "enum": Array [
              "Option 1",
              "Option 2",
              "Option 3",
            ],
            "title": "ui:widget: OtherRadioWidget",
            "type": "string",
          },
        },
        "title": "radio",
        "type": "object",
      }
    }
    uiSchema={
      Object {
        "classNames": "column-span-12",
        "radio": Object {
          "classNames": "column-span-12",
          "ui:options": Object {
            "withNone": true,
            "withOther": true,
          },
          "ui:widget": "radio",
        },
      }
    }
  >
    <Form
      disabled={false}
      forwardedRef={null}
      hideSubmit={false}
      isSubmitting={false}
      schema={
        Object {
          "properties": Object {
            "radio": Object {
              "enum": Array [
                "Option 1",
                "Option 2",
                "Option 3",
              ],
              "title": "ui:widget: OtherRadioWidget",
              "type": "string",
            },
          },
          "title": "radio",
          "type": "object",
        }
      }
      uiSchema={
        Object {
          "classNames": "column-span-12",
          "radio": Object {
            "classNames": "column-span-12",
            "ui:options": Object {
              "withNone": true,
              "withOther": true,
            },
            "ui:widget": "radio",
          },
        }
      }
    >
      <StyledForm
        ArrayFieldTemplate={[Function]}
        FieldTemplate={[Function]}
        ObjectFieldTemplate={[Function]}
        disabled={false}
        fields={
          Object {
            "DescriptionField": [Function],
            "SchemaField": [Function],
          }
        }
        schema={
          Object {
            "properties": Object {
              "radio": Object {
                "enum": Array [
                  "Option 1",
                  "Option 2",
                  "Option 3",
                ],
                "title": "ui:widget: OtherRadioWidget",
                "type": "string",
              },
            },
            "title": "radio",
            "type": "object",
          }
        }
        showErrorList={false}
        transformErrors={[Function]}
        uiSchema={
          Object {
            "classNames": "column-span-12",
            "radio": Object {
              "classNames": "column-span-12",
              "ui:options": Object {
                "withNone": true,
                "withOther": true,
              },
              "ui:widget": "radio",
            },
          }
        }
        widgets={
          Object {
            "BaseInput": [Function],
            "CheckboxWidget": [Function],
            "CheckboxesWidget": [Function],
            "DateTimeWidget": [Function],
            "DateWidget": [Function],
            "FileWidget": [Function],
            "OtherRadioWidget": [Function],
            "RadioWidget": [Function],
            "SelectWidget": [Function],
            "TextareaWidget": [Function],
            "TimeWidget": [Function],
          }
        }
      >
        <StyledComponent
          ArrayFieldTemplate={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={false}
          fields={
            Object {
              "DescriptionField": [Function],
              "SchemaField": [Function],
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "StyledForm-dhnby8-0",
                "isStatic": false,
                "lastClassName": "bjUJuX",
                "rules": Array [
                  "legend{line-height:normal;font-size:16px;grid-column:1 / -1;}> div.form-group.field.field-object >:first-child{display:grid;grid-template-columns:repeat(12,1fr);& > *{border-bottom:1px solid ",
                  "#dcdce7",
                  ";padding:",
                  [Function],
                  "}& > *:last-child{border-bottom:0;}& > legend{line-height:normal;font-size:18px;border-bottom:0;padding-bottom:0;margin:0;}}.column-span-1{grid-column:auto / span 1;}.column-span-2{grid-column:auto / span 2;}.column-span-3{grid-column:auto / span 3;}.column-span-4{grid-column:auto / span 4;}.column-span-5{grid-column:auto / span 5;}.column-span-6{grid-column:auto / span 6;}.column-span-7{grid-column:auto / span 7;}.column-span-8{grid-column:auto / span 8;}.column-span-9{grid-column:auto / span 9;}.column-span-10{grid-column:auto / span 10;}.column-span-11{grid-column:auto / span 11;}.column-span-12{grid-column:auto / span 12;}.grid-container{display:flex;flex:1;>:first-child{display:grid;grid-template-columns:repeat(12,1fr);grid-gap:20px 30px;width:100%;",
                  "@media (max-width:",
                  "36",
                  "em){",
                  "
        grid-gap: 15px;
      ",
                  "}",
                  "}}.hidden{display:none;}",
                ],
              },
              "displayName": "StyledForm",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "StyledForm-dhnby8-0",
              "target": [Function],
              "toString": [Function],
              "usesTheme": false,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          schema={
            Object {
              "properties": Object {
                "radio": Object {
                  "enum": Array [
                    "Option 1",
                    "Option 2",
                    "Option 3",
                  ],
                  "title": "ui:widget: OtherRadioWidget",
                  "type": "string",
                },
              },
              "title": "radio",
              "type": "object",
            }
          }
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={
            Object {
              "classNames": "column-span-12",
              "radio": Object {
                "classNames": "column-span-12",
                "ui:options": Object {
                  "withNone": true,
                  "withOther": true,
                },
                "ui:widget": "radio",
              },
            }
          }
          widgets={
            Object {
              "BaseInput": [Function],
              "CheckboxWidget": [Function],
              "CheckboxesWidget": [Function],
              "DateTimeWidget": [Function],
              "DateWidget": [Function],
              "FileWidget": [Function],
              "OtherRadioWidget": [Function],
              "RadioWidget": [Function],
              "SelectWidget": [Function],
              "TextareaWidget": [Function],
              "TimeWidget": [Function],
            }
          }
        >
          <Form
            ArrayFieldTemplate={[Function]}
            ErrorList={[Function]}
            FieldTemplate={[Function]}
            ObjectFieldTemplate={[Function]}
            className="StyledForm-dhnby8-0 bjUJuX"
            disabled={false}
            fields={
              Object {
                "DescriptionField": [Function],
                "SchemaField": [Function],
              }
            }
            liveValidate={false}
            noHtml5Validate={false}
            noValidate={false}
            omitExtraData={false}
            safeRenderCompletion={false}
            schema={
              Object {
                "properties": Object {
                  "radio": Object {
                    "enum": Array [
                      "Option 1",
                      "Option 2",
                      "Option 3",
                    ],
                    "title": "ui:widget: OtherRadioWidget",
                    "type": "string",
                  },
                },
                "title": "radio",
                "type": "object",
              }
            }
            showErrorList={false}
            transformErrors={[Function]}
            uiSchema={
              Object {
                "classNames": "column-span-12",
                "radio": Object {
                  "classNames": "column-span-12",
                  "ui:options": Object {
                    "withNone": true,
                    "withOther": true,
                  },
                  "ui:widget": "radio",
                },
              }
            }
            widgets={
              Object {
                "BaseInput": [Function],
                "CheckboxWidget": [Function],
                "CheckboxesWidget": [Function],
                "DateTimeWidget": [Function],
                "DateWidget": [Function],
                "FileWidget": [Function],
                "OtherRadioWidget": [Function],
                "RadioWidget": [Function],
                "SelectWidget": [Function],
                "TextareaWidget": [Function],
                "TimeWidget": [Function],
              }
            }
          >
            <form
              className="StyledForm-dhnby8-0 bjUJuX"
              noValidate={false}
              onSubmit={[Function]}
            >
              <CustomSchemaField
                disabled={false}
                errorSchema={Object {}}
                formData={Object {}}
                idSchema={
                  Object {
                    "$id": "root",
                    "radio": Object {
                      "$id": "root_radio",
                    },
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                registry={
                  Object {
                    "ArrayFieldTemplate": [Function],
                    "FieldTemplate": [Function],
                    "ObjectFieldTemplate": [Function],
                    "definitions": Object {},
                    "fields": Object {
                      "AnyOfField": [Function],
                      "ArrayField": [Function],
                      "BooleanField": [Function],
                      "DescriptionField": [Function],
                      "NullField": [Function],
                      "NumberField": [Function],
                      "ObjectField": [Function],
                      "OneOfField": [Function],
                      "SchemaField": [Function],
                      "StringField": [Function],
                      "TitleField": [Function],
                      "UnsupportedField": [Function],
                    },
                    "formContext": Object {},
                    "widgets": Object {
                      "AltDateTimeWidget": [Function],
                      "AltDateWidget": [Function],
                      "BaseInput": [Function],
                      "CheckboxWidget": [Function],
                      "CheckboxesWidget": [Function],
                      "ColorWidget": [Function],
                      "DateTimeWidget": [Function],
                      "DateWidget": [Function],
                      "EmailWidget": [Function],
                      "FileWidget": [Function],
                      "HiddenWidget": [Function],
                      "OtherRadioWidget": [Function],
                      "PasswordWidget": [Function],
                      "RadioWidget": [Function],
                      "RangeWidget": [Function],
                      "SelectWidget": [Function],
                      "TextWidget": [Function],
                      "TextareaWidget": [Function],
                      "TimeWidget": [Function],
                      "URLWidget": [Function],
                      "UpDownWidget": [Function],
                    },
                  }
                }
                safeRenderCompletion={false}
                schema={
                  Object {
                    "properties": Object {
                      "radio": Object {
                        "enum": Array [
                          "Option 1",
                          "Option 2",
                          "Option 3",
                        ],
                        "title": "ui:widget: OtherRadioWidget",
                        "type": "string",
                      },
                    },
                    "title": "radio",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "classNames": "column-span-12",
                    "radio": Object {
                      "classNames": "column-span-12",
                      "ui:options": Object {
                        "withNone": true,
                        "withOther": true,
                      },
                      "ui:widget": "radio",
                    },
                  }
                }
              >
                <SchemaField
                  autofocus={false}
                  disabled={false}
                  errorSchema={Object {}}
                  formData={Object {}}
                  idSchema={
                    Object {
                      "$id": "root",
                      "radio": Object {
                        "$id": "root_radio",
                      },
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  readonly={false}
                  registry={
                    Object {
                      "ArrayFieldTemplate": [Function],
                      "FieldTemplate": [Function],
                      "ObjectFieldTemplate": [Function],
                      "definitions": Object {},
                      "fields": Object {
                        "AnyOfField": [Function],
                        "ArrayField": [Function],
                        "BooleanField": [Function],
                        "DescriptionField": [Function],
                        "NullField": [Function],
                        "NumberField": [Function],
                        "ObjectField": [Function],
                        "OneOfField": [Function],
                        "SchemaField": [Function],
                        "StringField": [Function],
                        "TitleField": [Function],
                        "UnsupportedField": [Function],
                      },
                      "formContext": Object {},
                      "widgets": Object {
                        "AltDateTimeWidget": [Function],
                        "AltDateWidget": [Function],
                        "BaseInput": [Function],
                        "CheckboxWidget": [Function],
                        "CheckboxesWidget": [Function],
                        "ColorWidget": [Function],
                        "DateTimeWidget": [Function],
                        "DateWidget": [Function],
                        "EmailWidget": [Function],
                        "FileWidget": [Function],
                        "HiddenWidget": [Function],
                        "OtherRadioWidget": [Function],
                        "PasswordWidget": [Function],
                        "RadioWidget": [Function],
                        "RangeWidget": [Function],
                        "SelectWidget": [Function],
                        "TextWidget": [Function],
                        "TextareaWidget": [Function],
                        "TimeWidget": [Function],
                        "URLWidget": [Function],
                        "UpDownWidget": [Function],
                      },
                    }
                  }
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "properties": Object {
                        "radio": Object {
                          "enum": Array [
                            "Option 1",
                            "Option 2",
                            "Option 3",
                          ],
                          "title": "ui:widget: OtherRadioWidget",
                          "type": "string",
                        },
                      },
                      "title": "radio",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "classNames": "column-span-12",
                      "radio": Object {
                        "classNames": "column-span-12",
                        "ui:options": Object {
                          "withNone": true,
                          "withOther": true,
                        },
                        "ui:widget": "radio",
                      },
                    }
                  }
                >
                  <FieldTemplate
                    classNames="form-group field field-object  column-span-12"
                    description={
                      <DescriptionField
                        formContext={Object {}}
                        id="root__description"
                      />
                    }
                    disabled={false}
                    displayLabel={false}
                    errors={<ErrorList />}
                    fields={
                      Object {
                        "AnyOfField": [Function],
                        "ArrayField": [Function],
                        "BooleanField": [Function],
                        "DescriptionField": [Function],
                        "NullField": [Function],
                        "NumberField": [Function],
                        "ObjectField": [Function],
                        "OneOfField": [Function],
                        "SchemaField": [Function],
                        "StringField": [Function],
                        "TitleField": [Function],
                        "UnsupportedField": [Function],
                      }
                    }
                    formContext={Object {}}
                    help={<Help />}
                    hidden={false}
                    id="root"
                    label="radio"
                    readonly={false}
                    required={false}
                    schema={
                      Object {
                        "properties": Object {
                          "radio": Object {
                            "enum": Array [
                              "Option 1",
                              "Option 2",
                              "Option 3",
                            ],
                            "title": "ui:widget: OtherRadioWidget",
                            "type": "string",
                          },
                        },
                        "title": "radio",
                        "type": "object",
                      }
                    }
                    uiSchema={
                      Object {
                        "classNames": "column-span-12",
                        "radio": Object {
                          "classNames": "column-span-12",
                          "ui:options": Object {
                            "withNone": true,
                            "withOther": true,
                          },
                          "ui:widget": "radio",
                        },
                      }
                    }
                  >
                    <div
                      className="form-group field field-object  column-span-12"
                    >
                      <DescriptionField
                        formContext={Object {}}
                        id="root__description"
                      />
                      <ObjectField
                        autofocus={false}
                        disabled={false}
                        errorSchema={Object {}}
                        formContext={Object {}}
                        formData={Object {}}
                        idSchema={
                          Object {
                            "$id": "root",
                            "radio": Object {
                              "$id": "root_radio",
                            },
                          }
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        readonly={false}
                        registry={
                          Object {
                            "ArrayFieldTemplate": [Function],
                            "FieldTemplate": [Function],
                            "ObjectFieldTemplate": [Function],
                            "definitions": Object {},
                            "fields": Object {
                              "AnyOfField": [Function],
                              "ArrayField": [Function],
                              "BooleanField": [Function],
                              "DescriptionField": [Function],
                              "NullField": [Function],
                              "NumberField": [Function],
                              "ObjectField": [Function],
                              "OneOfField": [Function],
                              "SchemaField": [Function],
                              "StringField": [Function],
                              "TitleField": [Function],
                              "UnsupportedField": [Function],
                            },
                            "formContext": Object {},
                            "widgets": Object {
                              "AltDateTimeWidget": [Function],
                              "AltDateWidget": [Function],
                              "BaseInput": [Function],
                              "CheckboxWidget": [Function],
                              "CheckboxesWidget": [Function],
                              "ColorWidget": [Function],
                              "DateTimeWidget": [Function],
                              "DateWidget": [Function],
                              "EmailWidget": [Function],
                              "FileWidget": [Function],
                              "HiddenWidget": [Function],
                              "OtherRadioWidget": [Function],
                              "PasswordWidget": [Function],
                              "RadioWidget": [Function],
                              "RangeWidget": [Function],
                              "SelectWidget": [Function],
                              "TextWidget": [Function],
                              "TextareaWidget": [Function],
                              "TimeWidget": [Function],
                              "URLWidget": [Function],
                              "UpDownWidget": [Function],
                            },
                          }
                        }
                        required={false}
                        safeRenderCompletion={false}
                        schema={
                          Object {
                            "properties": Object {
                              "radio": Object {
                                "enum": Array [
                                  "Option 1",
                                  "Option 2",
                                  "Option 3",
                                ],
                                "title": "ui:widget: OtherRadioWidget",
                                "type": "string",
                              },
                            },
                            "title": "radio",
                            "type": "object",
                          }
                        }
                        uiSchema={
                          Object {
                            "classNames": undefined,
                            "radio": Object {
                              "classNames": "column-span-12",
                              "ui:options": Object {
                                "withNone": true,
                                "withOther": true,
                              },
                              "ui:widget": "radio",
                            },
                          }
                        }
                      >
                        <ObjectFieldTemplate
                          DescriptionField={[Function]}
                          TitleField={[Function]}
                          disabled={false}
                          formContext={Object {}}
                          formData={Object {}}
                          idSchema={
                            Object {
                              "$id": "root",
                              "radio": Object {
                                "$id": "root_radio",
                              },
                            }
                          }
                          onAddClick={[Function]}
                          properties={
                            Array [
                              Object {
                                "content": <CustomSchemaField
                                  disabled={false}
                                  idSchema={
                                    Object {
                                      "$id": "root_radio",
                                    }
                                  }
                                  name="radio"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDropPropertyClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyChange={[Function]}
                                  readonly={false}
                                  registry={
                                    Object {
                                      "ArrayFieldTemplate": [Function],
                                      "FieldTemplate": [Function],
                                      "ObjectFieldTemplate": [Function],
                                      "definitions": Object {},
                                      "fields": Object {
                                        "AnyOfField": [Function],
                                        "ArrayField": [Function],
                                        "BooleanField": [Function],
                                        "DescriptionField": [Function],
                                        "NullField": [Function],
                                        "NumberField": [Function],
                                        "ObjectField": [Function],
                                        "OneOfField": [Function],
                                        "SchemaField": [Function],
                                        "StringField": [Function],
                                        "TitleField": [Function],
                                        "UnsupportedField": [Function],
                                      },
                                      "formContext": Object {},
                                      "widgets": Object {
                                        "AltDateTimeWidget": [Function],
                                        "AltDateWidget": [Function],
                                        "BaseInput": [Function],
                                        "CheckboxWidget": [Function],
                                        "CheckboxesWidget": [Function],
                                        "ColorWidget": [Function],
                                        "DateTimeWidget": [Function],
                                        "DateWidget": [Function],
                                        "EmailWidget": [Function],
                                        "FileWidget": [Function],
                                        "HiddenWidget": [Function],
                                        "OtherRadioWidget": [Function],
                                        "PasswordWidget": [Function],
                                        "RadioWidget": [Function],
                                        "RangeWidget": [Function],
                                        "SelectWidget": [Function],
                                        "TextWidget": [Function],
                                        "TextareaWidget": [Function],
                                        "TimeWidget": [Function],
                                        "URLWidget": [Function],
                                        "UpDownWidget": [Function],
                                      },
                                    }
                                  }
                                  required={false}
                                  schema={
                                    Object {
                                      "enum": Array [
                                        "Option 1",
                                        "Option 2",
                                        "Option 3",
                                      ],
                                      "title": "ui:widget: OtherRadioWidget",
                                      "type": "string",
                                    }
                                  }
                                  uiSchema={
                                    Object {
                                      "classNames": "column-span-12",
                                      "ui:options": Object {
                                        "withNone": true,
                                        "withOther": true,
                                      },
                                      "ui:widget": "radio",
                                    }
                                  }
                                  wasPropertyKeyModified={false}
                                />,
                                "disabled": false,
                                "name": "radio",
                                "readonly": false,
                                "required": false,
                              },
                            ]
                          }
                          readonly={false}
                          required={false}
                          schema={
                            Object {
                              "properties": Object {
                                "radio": Object {
                                  "enum": Array [
                                    "Option 1",
                                    "Option 2",
                                    "Option 3",
                                  ],
                                  "title": "ui:widget: OtherRadioWidget",
                                  "type": "string",
                                },
                              },
                              "title": "radio",
                              "type": "object",
                            }
                          }
                          title="radio"
                          uiSchema={
                            Object {
                              "classNames": undefined,
                              "radio": Object {
                                "classNames": "column-span-12",
                                "ui:options": Object {
                                  "withNone": true,
                                  "withOther": true,
                                },
                                "ui:widget": "radio",
                              },
                            }
                          }
                        >
                          <div>
                            <TitleField
                              id="root__title"
                              required={false}
                              title="radio"
                            >
                              <legend
                                id="root__title"
                              >
                                radio
                              </legend>
                            </TitleField>
                            <CustomSchemaField
                              disabled={false}
                              idSchema={
                                Object {
                                  "$id": "root_radio",
                                }
                              }
                              key="radio"
                              name="radio"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onDropPropertyClick={[Function]}
                              onFocus={[Function]}
                              onKeyChange={[Function]}
                              readonly={false}
                              registry={
                                Object {
                                  "ArrayFieldTemplate": [Function],
                                  "FieldTemplate": [Function],
                                  "ObjectFieldTemplate": [Function],
                                  "definitions": Object {},
                                  "fields": Object {
                                    "AnyOfField": [Function],
                                    "ArrayField": [Function],
                                    "BooleanField": [Function],
                                    "DescriptionField": [Function],
                                    "NullField": [Function],
                                    "NumberField": [Function],
                                    "ObjectField": [Function],
                                    "OneOfField": [Function],
                                    "SchemaField": [Function],
                                    "StringField": [Function],
                                    "TitleField": [Function],
                                    "UnsupportedField": [Function],
                                  },
                                  "formContext": Object {},
                                  "widgets": Object {
                                    "AltDateTimeWidget": [Function],
                                    "AltDateWidget": [Function],
                                    "BaseInput": [Function],
                                    "CheckboxWidget": [Function],
                                    "CheckboxesWidget": [Function],
                                    "ColorWidget": [Function],
                                    "DateTimeWidget": [Function],
                                    "DateWidget": [Function],
                                    "EmailWidget": [Function],
                                    "FileWidget": [Function],
                                    "HiddenWidget": [Function],
                                    "OtherRadioWidget": [Function],
                                    "PasswordWidget": [Function],
                                    "RadioWidget": [Function],
                                    "RangeWidget": [Function],
                                    "SelectWidget": [Function],
                                    "TextWidget": [Function],
                                    "TextareaWidget": [Function],
                                    "TimeWidget": [Function],
                                    "URLWidget": [Function],
                                    "UpDownWidget": [Function],
                                  },
                                }
                              }
                              required={false}
                              schema={
                                Object {
                                  "enum": Array [
                                    "Option 1",
                                    "Option 2",
                                    "Option 3",
                                  ],
                                  "title": "ui:widget: OtherRadioWidget",
                                  "type": "string",
                                }
                              }
                              uiSchema={
                                Object {
                                  "classNames": "column-span-12",
                                  "ui:options": Object {
                                    "withNone": true,
                                    "withOther": true,
                                  },
                                  "ui:widget": "radio",
                                }
                              }
                              wasPropertyKeyModified={false}
                            >
                              <SchemaField
                                autofocus={false}
                                disabled={false}
                                errorSchema={Object {}}
                                idSchema={
                                  Object {
                                    "$id": "root_radio",
                                  }
                                }
                                name="radio"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDropPropertyClick={[Function]}
                                onFocus={[Function]}
                                onKeyChange={[Function]}
                                readonly={false}
                                registry={
                                  Object {
                                    "ArrayFieldTemplate": [Function],
                                    "FieldTemplate": [Function],
                                    "ObjectFieldTemplate": [Function],
                                    "definitions": Object {},
                                    "fields": Object {
                                      "AnyOfField": [Function],
                                      "ArrayField": [Function],
                                      "BooleanField": [Function],
                                      "DescriptionField": [Function],
                                      "NullField": [Function],
                                      "NumberField": [Function],
                                      "ObjectField": [Function],
                                      "OneOfField": [Function],
                                      "SchemaField": [Function],
                                      "StringField": [Function],
                                      "TitleField": [Function],
                                      "UnsupportedField": [Function],
                                    },
                                    "formContext": Object {},
                                    "widgets": Object {
                                      "AltDateTimeWidget": [Function],
                                      "AltDateWidget": [Function],
                                      "BaseInput": [Function],
                                      "CheckboxWidget": [Function],
                                      "CheckboxesWidget": [Function],
                                      "ColorWidget": [Function],
                                      "DateTimeWidget": [Function],
                                      "DateWidget": [Function],
                                      "EmailWidget": [Function],
                                      "FileWidget": [Function],
                                      "HiddenWidget": [Function],
                                      "OtherRadioWidget": [Function],
                                      "PasswordWidget": [Function],
                                      "RadioWidget": [Function],
                                      "RangeWidget": [Function],
                                      "SelectWidget": [Function],
                                      "TextWidget": [Function],
                                      "TextareaWidget": [Function],
                                      "TimeWidget": [Function],
                                      "URLWidget": [Function],
                                      "UpDownWidget": [Function],
                                    },
                                  }
                                }
                                required={false}
                                schema={
                                  Object {
                                    "enum": Array [
                                      "Option 1",
                                      "Option 2",
                                      "Option 3",
                                    ],
                                    "title": "ui:widget: OtherRadioWidget",
                                    "type": "string",
                                  }
                                }
                                uiSchema={
                                  Object {
                                    "classNames": "column-span-12",
                                    "ui:options": Object {
                                      "withNone": true,
                                      "withOther": true,
                                    },
                                    "ui:widget": "radio",
                                  }
                                }
                                wasPropertyKeyModified={false}
                              >
                                <FieldTemplate
                                  classNames="form-group field field-string  column-span-12"
                                  description={
                                    <DescriptionField
                                      formContext={Object {}}
                                      id="root_radio__description"
                                    />
                                  }
                                  disabled={false}
                                  displayLabel={true}
                                  errors={<ErrorList />}
                                  fields={
                                    Object {
                                      "AnyOfField": [Function],
                                      "ArrayField": [Function],
                                      "BooleanField": [Function],
                                      "DescriptionField": [Function],
                                      "NullField": [Function],
                                      "NumberField": [Function],
                                      "ObjectField": [Function],
                                      "OneOfField": [Function],
                                      "SchemaField": [Function],
                                      "StringField": [Function],
                                      "TitleField": [Function],
                                      "UnsupportedField": [Function],
                                    }
                                  }
                                  formContext={Object {}}
                                  help={<Help />}
                                  hidden={false}
                                  id="root_radio"
                                  label="ui:widget: OtherRadioWidget"
                                  onDropPropertyClick={[Function]}
                                  onKeyChange={[Function]}
                                  readonly={false}
                                  required={false}
                                  schema={
                                    Object {
                                      "enum": Array [
                                        "Option 1",
                                        "Option 2",
                                        "Option 3",
                                      ],
                                      "title": "ui:widget: OtherRadioWidget",
                                      "type": "string",
                                    }
                                  }
                                  uiSchema={
                                    Object {
                                      "classNames": "column-span-12",
                                      "ui:options": Object {
                                        "withNone": true,
                                        "withOther": true,
                                      },
                                      "ui:widget": "radio",
                                    }
                                  }
                                >
                                  <div
                                    className="form-group field field-string  column-span-12"
                                  >
                                    <Label
                                      htmlFor="root_radio"
                                      required={false}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Label-sc-130fyca-0",
                                              "isStatic": false,
                                              "lastClassName": "jnVjhS",
                                              "rules": Array [
                                                "color:",
                                                "#555e6f",
                                                ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                                                [Function],
                                                ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                                                [Function],
                                                ";",
                                                [Function],
                                                ";",
                                                [Function],
                                                ";",
                                              ],
                                            },
                                            "displayName": "Label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Label-sc-130fyca-0",
                                            "target": "label",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        htmlFor="root_radio"
                                        required={false}
                                      >
                                        <label
                                          className="Label-sc-130fyca-0 jnVjhS"
                                          htmlFor="root_radio"
                                          required={false}
                                        >
                                          ui:widget: OtherRadioWidget
                                        </label>
                                      </StyledComponent>
                                    </Label>
                                    <DescriptionField
                                      formContext={Object {}}
                                      id="root_radio__description"
                                    />
                                    <StringField
                                      autofocus={false}
                                      disabled={false}
                                      errorSchema={Object {}}
                                      formContext={Object {}}
                                      idSchema={
                                        Object {
                                          "$id": "root_radio",
                                        }
                                      }
                                      name="radio"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDropPropertyClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyChange={[Function]}
                                      readonly={false}
                                      registry={
                                        Object {
                                          "ArrayFieldTemplate": [Function],
                                          "FieldTemplate": [Function],
                                          "ObjectFieldTemplate": [Function],
                                          "definitions": Object {},
                                          "fields": Object {
                                            "AnyOfField": [Function],
                                            "ArrayField": [Function],
                                            "BooleanField": [Function],
                                            "DescriptionField": [Function],
                                            "NullField": [Function],
                                            "NumberField": [Function],
                                            "ObjectField": [Function],
                                            "OneOfField": [Function],
                                            "SchemaField": [Function],
                                            "StringField": [Function],
                                            "TitleField": [Function],
                                            "UnsupportedField": [Function],
                                          },
                                          "formContext": Object {},
                                          "widgets": Object {
                                            "AltDateTimeWidget": [Function],
                                            "AltDateWidget": [Function],
                                            "BaseInput": [Function],
                                            "CheckboxWidget": [Function],
                                            "CheckboxesWidget": [Function],
                                            "ColorWidget": [Function],
                                            "DateTimeWidget": [Function],
                                            "DateWidget": [Function],
                                            "EmailWidget": [Function],
                                            "FileWidget": [Function],
                                            "HiddenWidget": [Function],
                                            "OtherRadioWidget": [Function],
                                            "PasswordWidget": [Function],
                                            "RadioWidget": [Function],
                                            "RangeWidget": [Function],
                                            "SelectWidget": [Function],
                                            "TextWidget": [Function],
                                            "TextareaWidget": [Function],
                                            "TimeWidget": [Function],
                                            "URLWidget": [Function],
                                            "UpDownWidget": [Function],
                                          },
                                        }
                                      }
                                      required={false}
                                      schema={
                                        Object {
                                          "enum": Array [
                                            "Option 1",
                                            "Option 2",
                                            "Option 3",
                                          ],
                                          "title": "ui:widget: OtherRadioWidget",
                                          "type": "string",
                                        }
                                      }
                                      uiSchema={
                                        Object {
                                          "classNames": undefined,
                                          "ui:options": Object {
                                            "withNone": true,
                                            "withOther": true,
                                          },
                                          "ui:widget": "radio",
                                        }
                                      }
                                      wasPropertyKeyModified={false}
                                    >
                                      <Component
                                        autofocus={false}
                                        disabled={false}
                                        formContext={Object {}}
                                        id="root_radio"
                                        label="ui:widget: OtherRadioWidget"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        options={
                                          Object {
                                            "enumOptions": Array [
                                              Object {
                                                "label": "Option 1",
                                                "value": "Option 1",
                                              },
                                              Object {
                                                "label": "Option 2",
                                                "value": "Option 2",
                                              },
                                              Object {
                                                "label": "Option 3",
                                                "value": "Option 3",
                                              },
                                            ],
                                            "withNone": true,
                                            "withOther": true,
                                          }
                                        }
                                        placeholder=""
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {},
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "OtherRadioWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "TimeWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "enum": Array [
                                              "Option 1",
                                              "Option 2",
                                              "Option 3",
                                            ],
                                            "title": "ui:widget: OtherRadioWidget",
                                            "type": "string",
                                          }
                                        }
                                      >
                                        <RadioWidget
                                          autofocus={false}
                                          disabled={false}
                                          formContext={Object {}}
                                          id="root_radio"
                                          label="ui:widget: OtherRadioWidget"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          options={
                                            Object {
                                              "enumOptions": Array [
                                                Object {
                                                  "label": "Option 1",
                                                  "value": "Option 1",
                                                },
                                                Object {
                                                  "label": "Option 2",
                                                  "value": "Option 2",
                                                },
                                                Object {
                                                  "label": "Option 3",
                                                  "value": "Option 3",
                                                },
                                              ],
                                              "withNone": true,
                                              "withOther": true,
                                            }
                                          }
                                          placeholder=""
                                          readonly={false}
                                          registry={
                                            Object {
                                              "ArrayFieldTemplate": [Function],
                                              "FieldTemplate": [Function],
                                              "ObjectFieldTemplate": [Function],
                                              "definitions": Object {},
                                              "fields": Object {
                                                "AnyOfField": [Function],
                                                "ArrayField": [Function],
                                                "BooleanField": [Function],
                                                "DescriptionField": [Function],
                                                "NullField": [Function],
                                                "NumberField": [Function],
                                                "ObjectField": [Function],
                                                "OneOfField": [Function],
                                                "SchemaField": [Function],
                                                "StringField": [Function],
                                                "TitleField": [Function],
                                                "UnsupportedField": [Function],
                                              },
                                              "formContext": Object {},
                                              "widgets": Object {
                                                "AltDateTimeWidget": [Function],
                                                "AltDateWidget": [Function],
                                                "BaseInput": [Function],
                                                "CheckboxWidget": [Function],
                                                "CheckboxesWidget": [Function],
                                                "ColorWidget": [Function],
                                                "DateTimeWidget": [Function],
                                                "DateWidget": [Function],
                                                "EmailWidget": [Function],
                                                "FileWidget": [Function],
                                                "HiddenWidget": [Function],
                                                "OtherRadioWidget": [Function],
                                                "PasswordWidget": [Function],
                                                "RadioWidget": [Function],
                                                "RangeWidget": [Function],
                                                "SelectWidget": [Function],
                                                "TextWidget": [Function],
                                                "TextareaWidget": [Function],
                                                "TimeWidget": [Function],
                                                "URLWidget": [Function],
                                                "UpDownWidget": [Function],
                                              },
                                            }
                                          }
                                          required={false}
                                          schema={
                                            Object {
                                              "enum": Array [
                                                "Option 1",
                                                "Option 2",
                                                "Option 3",
                                              ],
                                              "title": "ui:widget: OtherRadioWidget",
                                              "type": "string",
                                            }
                                          }
                                        >
                                          <ChoiceGroup
                                            id="root_radio"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "ChoiceGroup-sc-1pvteyi-0",
                                                    "isStatic": false,
                                                    "lastClassName": "eZkShZ",
                                                    "rules": Array [
                                                      "display:grid;grid-gap:10px;grid-template-columns:",
                                                      [Function],
                                                      ";flex-wrap:wrap;",
                                                    ],
                                                  },
                                                  "displayName": "ChoiceGroup",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "ChoiceGroup-sc-1pvteyi-0",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "usesTheme": false,
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              id="root_radio"
                                            >
                                              <div
                                                className="ChoiceGroup-sc-1pvteyi-0 eZkShZ"
                                                id="root_radio"
                                              >
                                                <Radio
                                                  autoFocus={false}
                                                  checked={false}
                                                  disabled={false}
                                                  id="root_radio_Option 1"
                                                  key="radio_Option 1"
                                                  label="Option 1"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  type="radio"
                                                  value="Option 1"
                                                >
                                                  <ChoiceLabel
                                                    disabled={false}
                                                    htmlFor="root_radio_Option 1"
                                                  >
                                                    <StyledComponent
                                                      disabled={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ChoiceLabel-sc-11kob9e-0",
                                                            "isStatic": false,
                                                            "lastClassName": "jRFUhG",
                                                            "rules": Array [
                                                              "align-items:center;color:",
                                                              [Function],
                                                              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
                                                              [Function],
                                                              ";position:relative;vertical-align:middle;",
                                                            ],
                                                          },
                                                          "displayName": "ChoiceLabel",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
                                                          "target": "label",
                                                          "toString": [Function],
                                                          "usesTheme": false,
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      htmlFor="root_radio_Option 1"
                                                    >
                                                      <label
                                                        className="ChoiceLabel-sc-11kob9e-0 jRFUhG"
                                                        disabled={false}
                                                        htmlFor="root_radio_Option 1"
                                                      >
                                                        <ChoiceWrappers__ChoiceWrapper>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jWzYQy",
                                                                  "rules": Array [
                                                                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                                                                    [Function],
                                                                    ";",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceWrappers__ChoiceWrapper",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceWrappers__ChoiceWrapper-kj63qq-0 jWzYQy"
                                                            >
                                                              <ChoiceWrappers__ChoiceInnerWrapper>
                                                                <StyledComponent
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                        "isStatic": false,
                                                                        "lastClassName": "dxFEzI",
                                                                        "rules": Array [
                                                                          "display:flex;flex:1;",
                                                                        ],
                                                                      },
                                                                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                      "target": "span",
                                                                      "toString": [Function],
                                                                      "usesTheme": false,
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                >
                                                                  <span
                                                                    className="ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1 dxFEzI"
                                                                  >
                                                                    <ChoiceInputs__RadioInput
                                                                      autoFocus={false}
                                                                      checked={false}
                                                                      id="root_radio_Option 1"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      type="radio"
                                                                      value="Option 1"
                                                                    >
                                                                      <StyledComponent
                                                                        autoFocus={false}
                                                                        checked={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [
                                                                              [Function],
                                                                            ],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ftotFv",
                                                                              "rules": Array [
                                                                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                                                              ],
                                                                            },
                                                                            "displayName": "ChoiceInputs__RadioInput",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                            "target": "input",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        id="root_radio_Option 1"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        type="radio"
                                                                        value="Option 1"
                                                                      >
                                                                        <input
                                                                          autoFocus={false}
                                                                          checked={false}
                                                                          className="ChoiceInputs__RadioInput-sc-1fkg6yx-0 ftotFv"
                                                                          id="root_radio_Option 1"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          type="radio"
                                                                          value="Option 1"
                                                                        />
                                                                      </StyledComponent>
                                                                    </ChoiceInputs__RadioInput>
                                                                    <RadioIndicator>
                                                                      <StyledComponent
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "frODtr",
                                                                              "rules": Array [
                                                                                "transition:background-color ",
                                                                                "100ms",
                                                                                " ease-out,border-color ",
                                                                                "100ms",
                                                                                " ease-out,box-shadow ",
                                                                                "100ms",
                                                                                " ease-out,color ",
                                                                                "100ms",
                                                                                " ease-out;",
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "RadioIndicator",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                            "target": "span",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                      >
                                                                        <span
                                                                          className="RadioIndicator-sc-1vlnpb4-0 frODtr"
                                                                        />
                                                                      </StyledComponent>
                                                                    </RadioIndicator>
                                                                  </span>
                                                                </StyledComponent>
                                                              </ChoiceWrappers__ChoiceInnerWrapper>
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceWrappers__ChoiceWrapper>
                                                        <ChoiceText>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceText-sc-1qnriny-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "cIPRTi",
                                                                  "rules": Array [
                                                                    "margin-left:10px;",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceText-sc-1qnriny-0 cIPRTi"
                                                            >
                                                              Option 1
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceText>
                                                      </label>
                                                    </StyledComponent>
                                                  </ChoiceLabel>
                                                </Radio>
                                                <Radio
                                                  autoFocus={false}
                                                  checked={false}
                                                  disabled={false}
                                                  id="root_radio_Option 2"
                                                  key="radio_Option 2"
                                                  label="Option 2"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  type="radio"
                                                  value="Option 2"
                                                >
                                                  <ChoiceLabel
                                                    disabled={false}
                                                    htmlFor="root_radio_Option 2"
                                                  >
                                                    <StyledComponent
                                                      disabled={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ChoiceLabel-sc-11kob9e-0",
                                                            "isStatic": false,
                                                            "lastClassName": "jRFUhG",
                                                            "rules": Array [
                                                              "align-items:center;color:",
                                                              [Function],
                                                              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
                                                              [Function],
                                                              ";position:relative;vertical-align:middle;",
                                                            ],
                                                          },
                                                          "displayName": "ChoiceLabel",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
                                                          "target": "label",
                                                          "toString": [Function],
                                                          "usesTheme": false,
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      htmlFor="root_radio_Option 2"
                                                    >
                                                      <label
                                                        className="ChoiceLabel-sc-11kob9e-0 jRFUhG"
                                                        disabled={false}
                                                        htmlFor="root_radio_Option 2"
                                                      >
                                                        <ChoiceWrappers__ChoiceWrapper>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jWzYQy",
                                                                  "rules": Array [
                                                                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                                                                    [Function],
                                                                    ";",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceWrappers__ChoiceWrapper",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceWrappers__ChoiceWrapper-kj63qq-0 jWzYQy"
                                                            >
                                                              <ChoiceWrappers__ChoiceInnerWrapper>
                                                                <StyledComponent
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                        "isStatic": false,
                                                                        "lastClassName": "dxFEzI",
                                                                        "rules": Array [
                                                                          "display:flex;flex:1;",
                                                                        ],
                                                                      },
                                                                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                      "target": "span",
                                                                      "toString": [Function],
                                                                      "usesTheme": false,
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                >
                                                                  <span
                                                                    className="ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1 dxFEzI"
                                                                  >
                                                                    <ChoiceInputs__RadioInput
                                                                      autoFocus={false}
                                                                      checked={false}
                                                                      id="root_radio_Option 2"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      type="radio"
                                                                      value="Option 2"
                                                                    >
                                                                      <StyledComponent
                                                                        autoFocus={false}
                                                                        checked={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [
                                                                              [Function],
                                                                            ],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ftotFv",
                                                                              "rules": Array [
                                                                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                                                              ],
                                                                            },
                                                                            "displayName": "ChoiceInputs__RadioInput",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                            "target": "input",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        id="root_radio_Option 2"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        type="radio"
                                                                        value="Option 2"
                                                                      >
                                                                        <input
                                                                          autoFocus={false}
                                                                          checked={false}
                                                                          className="ChoiceInputs__RadioInput-sc-1fkg6yx-0 ftotFv"
                                                                          id="root_radio_Option 2"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          type="radio"
                                                                          value="Option 2"
                                                                        />
                                                                      </StyledComponent>
                                                                    </ChoiceInputs__RadioInput>
                                                                    <RadioIndicator>
                                                                      <StyledComponent
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "frODtr",
                                                                              "rules": Array [
                                                                                "transition:background-color ",
                                                                                "100ms",
                                                                                " ease-out,border-color ",
                                                                                "100ms",
                                                                                " ease-out,box-shadow ",
                                                                                "100ms",
                                                                                " ease-out,color ",
                                                                                "100ms",
                                                                                " ease-out;",
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "RadioIndicator",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                            "target": "span",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                      >
                                                                        <span
                                                                          className="RadioIndicator-sc-1vlnpb4-0 frODtr"
                                                                        />
                                                                      </StyledComponent>
                                                                    </RadioIndicator>
                                                                  </span>
                                                                </StyledComponent>
                                                              </ChoiceWrappers__ChoiceInnerWrapper>
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceWrappers__ChoiceWrapper>
                                                        <ChoiceText>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceText-sc-1qnriny-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "cIPRTi",
                                                                  "rules": Array [
                                                                    "margin-left:10px;",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceText-sc-1qnriny-0 cIPRTi"
                                                            >
                                                              Option 2
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceText>
                                                      </label>
                                                    </StyledComponent>
                                                  </ChoiceLabel>
                                                </Radio>
                                                <Radio
                                                  autoFocus={false}
                                                  checked={false}
                                                  disabled={false}
                                                  id="root_radio_Option 3"
                                                  key="radio_Option 3"
                                                  label="Option 3"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  type="radio"
                                                  value="Option 3"
                                                >
                                                  <ChoiceLabel
                                                    disabled={false}
                                                    htmlFor="root_radio_Option 3"
                                                  >
                                                    <StyledComponent
                                                      disabled={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ChoiceLabel-sc-11kob9e-0",
                                                            "isStatic": false,
                                                            "lastClassName": "jRFUhG",
                                                            "rules": Array [
                                                              "align-items:center;color:",
                                                              [Function],
                                                              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
                                                              [Function],
                                                              ";position:relative;vertical-align:middle;",
                                                            ],
                                                          },
                                                          "displayName": "ChoiceLabel",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
                                                          "target": "label",
                                                          "toString": [Function],
                                                          "usesTheme": false,
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      htmlFor="root_radio_Option 3"
                                                    >
                                                      <label
                                                        className="ChoiceLabel-sc-11kob9e-0 jRFUhG"
                                                        disabled={false}
                                                        htmlFor="root_radio_Option 3"
                                                      >
                                                        <ChoiceWrappers__ChoiceWrapper>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jWzYQy",
                                                                  "rules": Array [
                                                                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                                                                    [Function],
                                                                    ";",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceWrappers__ChoiceWrapper",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceWrappers__ChoiceWrapper-kj63qq-0 jWzYQy"
                                                            >
                                                              <ChoiceWrappers__ChoiceInnerWrapper>
                                                                <StyledComponent
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                        "isStatic": false,
                                                                        "lastClassName": "dxFEzI",
                                                                        "rules": Array [
                                                                          "display:flex;flex:1;",
                                                                        ],
                                                                      },
                                                                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                      "target": "span",
                                                                      "toString": [Function],
                                                                      "usesTheme": false,
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                >
                                                                  <span
                                                                    className="ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1 dxFEzI"
                                                                  >
                                                                    <ChoiceInputs__RadioInput
                                                                      autoFocus={false}
                                                                      checked={false}
                                                                      id="root_radio_Option 3"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      type="radio"
                                                                      value="Option 3"
                                                                    >
                                                                      <StyledComponent
                                                                        autoFocus={false}
                                                                        checked={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [
                                                                              [Function],
                                                                            ],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ftotFv",
                                                                              "rules": Array [
                                                                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                                                              ],
                                                                            },
                                                                            "displayName": "ChoiceInputs__RadioInput",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                            "target": "input",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        id="root_radio_Option 3"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        type="radio"
                                                                        value="Option 3"
                                                                      >
                                                                        <input
                                                                          autoFocus={false}
                                                                          checked={false}
                                                                          className="ChoiceInputs__RadioInput-sc-1fkg6yx-0 ftotFv"
                                                                          id="root_radio_Option 3"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          type="radio"
                                                                          value="Option 3"
                                                                        />
                                                                      </StyledComponent>
                                                                    </ChoiceInputs__RadioInput>
                                                                    <RadioIndicator>
                                                                      <StyledComponent
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "frODtr",
                                                                              "rules": Array [
                                                                                "transition:background-color ",
                                                                                "100ms",
                                                                                " ease-out,border-color ",
                                                                                "100ms",
                                                                                " ease-out,box-shadow ",
                                                                                "100ms",
                                                                                " ease-out,color ",
                                                                                "100ms",
                                                                                " ease-out;",
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "RadioIndicator",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                            "target": "span",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                      >
                                                                        <span
                                                                          className="RadioIndicator-sc-1vlnpb4-0 frODtr"
                                                                        />
                                                                      </StyledComponent>
                                                                    </RadioIndicator>
                                                                  </span>
                                                                </StyledComponent>
                                                              </ChoiceWrappers__ChoiceInnerWrapper>
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceWrappers__ChoiceWrapper>
                                                        <ChoiceText>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceText-sc-1qnriny-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "cIPRTi",
                                                                  "rules": Array [
                                                                    "margin-left:10px;",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceText-sc-1qnriny-0 cIPRTi"
                                                            >
                                                              Option 3
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceText>
                                                      </label>
                                                    </StyledComponent>
                                                  </ChoiceLabel>
                                                </Radio>
                                                <Radio
                                                  autoFocus={false}
                                                  checked={false}
                                                  disabled={false}
                                                  id="root_radio_None"
                                                  key="radio_None"
                                                  label="None"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  type="radio"
                                                  value="None"
                                                >
                                                  <ChoiceLabel
                                                    disabled={false}
                                                    htmlFor="root_radio_None"
                                                  >
                                                    <StyledComponent
                                                      disabled={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ChoiceLabel-sc-11kob9e-0",
                                                            "isStatic": false,
                                                            "lastClassName": "jRFUhG",
                                                            "rules": Array [
                                                              "align-items:center;color:",
                                                              [Function],
                                                              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
                                                              [Function],
                                                              ";position:relative;vertical-align:middle;",
                                                            ],
                                                          },
                                                          "displayName": "ChoiceLabel",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
                                                          "target": "label",
                                                          "toString": [Function],
                                                          "usesTheme": false,
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      htmlFor="root_radio_None"
                                                    >
                                                      <label
                                                        className="ChoiceLabel-sc-11kob9e-0 jRFUhG"
                                                        disabled={false}
                                                        htmlFor="root_radio_None"
                                                      >
                                                        <ChoiceWrappers__ChoiceWrapper>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jWzYQy",
                                                                  "rules": Array [
                                                                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                                                                    [Function],
                                                                    ";",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceWrappers__ChoiceWrapper",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceWrappers__ChoiceWrapper-kj63qq-0 jWzYQy"
                                                            >
                                                              <ChoiceWrappers__ChoiceInnerWrapper>
                                                                <StyledComponent
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                        "isStatic": false,
                                                                        "lastClassName": "dxFEzI",
                                                                        "rules": Array [
                                                                          "display:flex;flex:1;",
                                                                        ],
                                                                      },
                                                                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                      "target": "span",
                                                                      "toString": [Function],
                                                                      "usesTheme": false,
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                >
                                                                  <span
                                                                    className="ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1 dxFEzI"
                                                                  >
                                                                    <ChoiceInputs__RadioInput
                                                                      autoFocus={false}
                                                                      checked={false}
                                                                      id="root_radio_None"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      type="radio"
                                                                      value="None"
                                                                    >
                                                                      <StyledComponent
                                                                        autoFocus={false}
                                                                        checked={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [
                                                                              [Function],
                                                                            ],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ftotFv",
                                                                              "rules": Array [
                                                                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                                                              ],
                                                                            },
                                                                            "displayName": "ChoiceInputs__RadioInput",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                            "target": "input",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        id="root_radio_None"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        type="radio"
                                                                        value="None"
                                                                      >
                                                                        <input
                                                                          autoFocus={false}
                                                                          checked={false}
                                                                          className="ChoiceInputs__RadioInput-sc-1fkg6yx-0 ftotFv"
                                                                          id="root_radio_None"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          type="radio"
                                                                          value="None"
                                                                        />
                                                                      </StyledComponent>
                                                                    </ChoiceInputs__RadioInput>
                                                                    <RadioIndicator>
                                                                      <StyledComponent
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "frODtr",
                                                                              "rules": Array [
                                                                                "transition:background-color ",
                                                                                "100ms",
                                                                                " ease-out,border-color ",
                                                                                "100ms",
                                                                                " ease-out,box-shadow ",
                                                                                "100ms",
                                                                                " ease-out,color ",
                                                                                "100ms",
                                                                                " ease-out;",
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "RadioIndicator",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                            "target": "span",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                      >
                                                                        <span
                                                                          className="RadioIndicator-sc-1vlnpb4-0 frODtr"
                                                                        />
                                                                      </StyledComponent>
                                                                    </RadioIndicator>
                                                                  </span>
                                                                </StyledComponent>
                                                              </ChoiceWrappers__ChoiceInnerWrapper>
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceWrappers__ChoiceWrapper>
                                                        <ChoiceText>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceText-sc-1qnriny-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "cIPRTi",
                                                                  "rules": Array [
                                                                    "margin-left:10px;",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceText-sc-1qnriny-0 cIPRTi"
                                                            >
                                                              None
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceText>
                                                      </label>
                                                    </StyledComponent>
                                                  </ChoiceLabel>
                                                </Radio>
                                                <Radio
                                                  autoFocus={false}
                                                  checked={false}
                                                  disabled={false}
                                                  id="root_radio_Other"
                                                  key="radio_Other"
                                                  label="Other"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  type="radio"
                                                  value="Other"
                                                >
                                                  <ChoiceLabel
                                                    disabled={false}
                                                    htmlFor="root_radio_Other"
                                                  >
                                                    <StyledComponent
                                                      disabled={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ChoiceLabel-sc-11kob9e-0",
                                                            "isStatic": false,
                                                            "lastClassName": "jRFUhG",
                                                            "rules": Array [
                                                              "align-items:center;color:",
                                                              [Function],
                                                              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
                                                              [Function],
                                                              ";position:relative;vertical-align:middle;",
                                                            ],
                                                          },
                                                          "displayName": "ChoiceLabel",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
                                                          "target": "label",
                                                          "toString": [Function],
                                                          "usesTheme": false,
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      htmlFor="root_radio_Other"
                                                    >
                                                      <label
                                                        className="ChoiceLabel-sc-11kob9e-0 jRFUhG"
                                                        disabled={false}
                                                        htmlFor="root_radio_Other"
                                                      >
                                                        <ChoiceWrappers__ChoiceWrapper>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "jWzYQy",
                                                                  "rules": Array [
                                                                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                                                                    [Function],
                                                                    ";",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceWrappers__ChoiceWrapper",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceWrappers__ChoiceWrapper-kj63qq-0 jWzYQy"
                                                            >
                                                              <ChoiceWrappers__ChoiceInnerWrapper>
                                                                <StyledComponent
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                        "isStatic": false,
                                                                        "lastClassName": "dxFEzI",
                                                                        "rules": Array [
                                                                          "display:flex;flex:1;",
                                                                        ],
                                                                      },
                                                                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                                                                      "target": "span",
                                                                      "toString": [Function],
                                                                      "usesTheme": false,
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                >
                                                                  <span
                                                                    className="ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1 dxFEzI"
                                                                  >
                                                                    <ChoiceInputs__RadioInput
                                                                      autoFocus={false}
                                                                      checked={false}
                                                                      id="root_radio_Other"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      type="radio"
                                                                      value="Other"
                                                                    >
                                                                      <StyledComponent
                                                                        autoFocus={false}
                                                                        checked={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [
                                                                              [Function],
                                                                            ],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ftotFv",
                                                                              "rules": Array [
                                                                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                                                              ],
                                                                            },
                                                                            "displayName": "ChoiceInputs__RadioInput",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                                                                            "target": "input",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        id="root_radio_Other"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        type="radio"
                                                                        value="Other"
                                                                      >
                                                                        <input
                                                                          autoFocus={false}
                                                                          checked={false}
                                                                          className="ChoiceInputs__RadioInput-sc-1fkg6yx-0 ftotFv"
                                                                          id="root_radio_Other"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          type="radio"
                                                                          value="Other"
                                                                        />
                                                                      </StyledComponent>
                                                                    </ChoiceInputs__RadioInput>
                                                                    <RadioIndicator>
                                                                      <StyledComponent
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "frODtr",
                                                                              "rules": Array [
                                                                                "transition:background-color ",
                                                                                "100ms",
                                                                                " ease-out,border-color ",
                                                                                "100ms",
                                                                                " ease-out,box-shadow ",
                                                                                "100ms",
                                                                                " ease-out,color ",
                                                                                "100ms",
                                                                                " ease-out;",
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "RadioIndicator",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                                                                            "target": "span",
                                                                            "toString": [Function],
                                                                            "usesTheme": false,
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                      >
                                                                        <span
                                                                          className="RadioIndicator-sc-1vlnpb4-0 frODtr"
                                                                        />
                                                                      </StyledComponent>
                                                                    </RadioIndicator>
                                                                  </span>
                                                                </StyledComponent>
                                                              </ChoiceWrappers__ChoiceInnerWrapper>
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceWrappers__ChoiceWrapper>
                                                        <ChoiceText>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ChoiceText-sc-1qnriny-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "cIPRTi",
                                                                  "rules": Array [
                                                                    "margin-left:10px;",
                                                                  ],
                                                                },
                                                                "displayName": "ChoiceText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "usesTheme": false,
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <span
                                                              className="ChoiceText-sc-1qnriny-0 cIPRTi"
                                                            >
                                                              Other
                                                            </span>
                                                          </StyledComponent>
                                                        </ChoiceText>
                                                      </label>
                                                    </StyledComponent>
                                                  </ChoiceLabel>
                                                </Radio>
                                              </div>
                                            </StyledComponent>
                                          </ChoiceGroup>
                                        </RadioWidget>
                                      </Component>
                                    </StringField>
                                    <Help />
                                  </div>
                                </FieldTemplate>
                              </SchemaField>
                              <ConfirmDeleteModal
                                isVisible={false}
                                onClickPrimary={[Function]}
                                onClickSecondary={[Function]}
                                onClose={[Function]}
                              >
                                <Modal
                                  isVisible={false}
                                  onClickPrimary={[Function]}
                                  onClickSecondary={[Function]}
                                  onClose={[Function]}
                                  shouldBeCentered={true}
                                  shouldCloseOnEscape={true}
                                  shouldCloseOnOutsideClick={true}
                                  shouldStretchButtons={false}
                                  textPrimary="Delete"
                                  textSecondary="Cancel"
                                  textTitle="Confirm Delete"
                                  viewportScrolling={false}
                                  withFooter={true}
                                  withHeader={true}
                                >
                                  <Overlay
                                    isScrollable={false}
                                    isVisible={false}
                                    onClose={[Function]}
                                    shouldCloseOnClick={true}
                                    transparent={false}
                                  >
                                    <CSSTransition
                                      classNames="luk-fade"
                                      in={false}
                                      mountOnEnter={true}
                                      timeout={200}
                                      unmountOnExit={true}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={200}
                                        unmountOnExit={true}
                                      />
                                    </CSSTransition>
                                  </Overlay>
                                </Modal>
                              </ConfirmDeleteModal>
                            </CustomSchemaField>
                          </div>
                        </ObjectFieldTemplate>
                      </ObjectField>
                      <Help />
                    </div>
                  </FieldTemplate>
                </SchemaField>
                <ConfirmDeleteModal
                  isVisible={false}
                  onClickPrimary={[Function]}
                  onClickSecondary={[Function]}
                  onClose={[Function]}
                >
                  <Modal
                    isVisible={false}
                    onClickPrimary={[Function]}
                    onClickSecondary={[Function]}
                    onClose={[Function]}
                    shouldBeCentered={true}
                    shouldCloseOnEscape={true}
                    shouldCloseOnOutsideClick={true}
                    shouldStretchButtons={false}
                    textPrimary="Delete"
                    textSecondary="Cancel"
                    textTitle="Confirm Delete"
                    viewportScrolling={false}
                    withFooter={true}
                    withHeader={true}
                  >
                    <Overlay
                      isScrollable={false}
                      isVisible={false}
                      onClose={[Function]}
                      shouldCloseOnClick={true}
                      transparent={false}
                    >
                      <CSSTransition
                        classNames="luk-fade"
                        in={false}
                        mountOnEnter={true}
                        timeout={200}
                        unmountOnExit={true}
                      >
                        <Transition
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={200}
                          unmountOnExit={true}
                        />
                      </CSSTransition>
                    </Overlay>
                  </Modal>
                </ConfirmDeleteModal>
              </CustomSchemaField>
              <ActionGroup>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "ActionGroup-sc-1hp5mpm-0",
                        "isStatic": false,
                        "lastClassName": "iYwyvW",
                        "rules": Array [
                          "display:flex;justify-content:space-between;padding:",
                          [Function],
                          ";",
                        ],
                      },
                      "displayName": "ActionGroup",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "ActionGroup-sc-1hp5mpm-0",
                      "target": "div",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="ActionGroup-sc-1hp5mpm-0 iYwyvW"
                  >
                    <Button
                      disabled={false}
                      fontColor=""
                      isLoading={false}
                      mode="primary"
                      type="submit"
                    >
                      <StyledButton
                        disabled={false}
                        fontColor=""
                        mode="primary"
                        type="submit"
                      >
                        <StyledComponent
                          disabled={false}
                          fontColor=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "StyledButton-sc-1etazn9-0",
                                "isStatic": false,
                                "lastClassName": "iHfePs",
                                "rules": Array [
                                  "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                                  "100ms",
                                  " ease-out,border-color ",
                                  "100ms",
                                  " ease-out,box-shadow ",
                                  "100ms",
                                  " ease-out;width:",
                                  [Function],
                                  ";white-space:nowrap;",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";:hover{cursor:pointer;text-decoration:none;",
                                  [Function],
                                  "};:active{text-decoration:none;",
                                  [Function],
                                  "};:disabled{cursor:not-allowed;text-decoration:none;",
                                  [Function],
                                  "};:focus{",
                                  [Function],
                                  "}",
                                ],
                              },
                              "displayName": "StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "StyledButton-sc-1etazn9-0",
                              "target": "button",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          mode="primary"
                          type="submit"
                        >
                          <button
                            className="StyledButton-sc-1etazn9-0 iHfePs"
                            disabled={false}
                            mode="primary"
                            type="submit"
                          >
                            <ContentWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ContentWrapper-sc-36hfub-0",
                                      "isStatic": false,
                                      "lastClassName": "dcZMKu",
                                      "rules": Array [
                                        "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                      ],
                                    },
                                    "displayName": "ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ContentWrapper-sc-36hfub-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="ContentWrapper-sc-36hfub-0 dcZMKu"
                                >
                                  <Content
                                    isLoading={false}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Content-sc-18psqsj-0",
                                            "isStatic": false,
                                            "lastClassName": "bLWFGn",
                                            "rules": Array [
                                              "flex:1 1 auto;opacity:",
                                              [Function],
                                              ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "Content",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Content-sc-18psqsj-0",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isLoading={false}
                                    >
                                      <span
                                        className="Content-sc-18psqsj-0 bLWFGn"
                                      >
                                        Submit
                                      </span>
                                    </StyledComponent>
                                  </Content>
                                </span>
                              </StyledComponent>
                            </ContentWrapper>
                          </button>
                        </StyledComponent>
                      </StyledButton>
                    </Button>
                  </div>
                </StyledComponent>
              </ActionGroup>
            </form>
          </Form>
        </StyledComponent>
      </StyledForm>
    </Form>
  </ForwardRef>
</MockForm>
`;
